/*
 * generated by Xtext 2.31.0
 */
package org.gemoc.qls.validation

import org.eclipse.xtext.validation.Check
import org.gemoc.qls.utils.QLSUtils
import org.gemoc.qls.model.qls.QlsPackage
import org.gemoc.qls.model.qls.Import
import org.gemoc.qls.model.qls.QuestionReference
import org.gemoc.qls.model.qls.QLSModel


import static extension org.gemoc.ql.k3ql.k3dsa.ecore.EObjectAspect.*
import org.gemoc.qls.model.qls.QuestionStyle

/**
 * This class contains custom validation rules. 
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class QLSValidator extends AbstractQLSValidator {

	public static final String INVALID_URI = "invalidURI";
	public static final String FORBIDDEN_MULTIPLE_USE = "forbiddenMultipleUse";

	@Check
	def checkImport(Import imp) {
		// check file exist
		if (imp.importURI !== null) {
			if (imp.importURI.startsWith("/")) {
				error("Invalid URI format " + imp.importURI + ", maybe \"platform:\" prefix is missing", imp,
					imp.eClass.getEStructuralFeature(QlsPackage.IMPORT__IMPORT_URI), INVALID_URI)
			}
			val uri = QLSUtils.resolveImportURI(imp.importURI, imp.eResource)
			if (!imp.eResource.resourceSet.URIConverter.exists(uri, null)) {
				error("File " + uri + " not found", imp,
					imp.eClass.getEStructuralFeature(QlsPackage.IMPORT__IMPORT_URI))
			}
		}
	}
	
	@Check
	def checkQuestionReference(QuestionReference qRef) {
		if(qRef.getContainerOfType(QLSModel).eAllContents.filter(QuestionReference).filter[qr | qr.question == qRef.question].size > 1) {
			error("Cannot use question more than once in QLS sections", qRef, qRef.eClass.getEStructuralFeature(QlsPackage.QUESTION_REFERENCE__QUESTION), FORBIDDEN_MULTIPLE_USE)
		}
	}

	@Check
	def checkQuestionStyle(QuestionStyle qStyle) {
		if(qStyle.getContainerOfType(QLSModel).eAllContents.filter(QuestionStyle).filter[qs | qs.styledQuestion == qStyle.styledQuestion].size > 1) {
			error("Multiple styles provided for question "+qStyle.styledQuestion.name, qStyle, qStyle.eClass.getEStructuralFeature(QlsPackage.QUESTION_STYLE__STYLED_QUESTION), FORBIDDEN_MULTIPLE_USE)
		}
	}

}
