/**
 * generated by Xtext 2.31.0
 */
package org.gemoc.qls.validation;

import org.eclipse.emf.common.util.URI;
import org.eclipse.xtext.validation.Check;
import org.gemoc.qls.model.qls.Import;
import org.gemoc.qls.model.qls.QlsPackage;
import org.gemoc.qls.utils.QLSUtils;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class QLSValidator extends AbstractQLSValidator {
  public static final String INVALID_URI = "invalidURI";

  @Check
  public void checkImport(final Import imp) {
    String _importURI = imp.getImportURI();
    boolean _tripleNotEquals = (_importURI != null);
    if (_tripleNotEquals) {
      boolean _startsWith = imp.getImportURI().startsWith("/");
      if (_startsWith) {
        String _importURI_1 = imp.getImportURI();
        String _plus = ("Invalid URI format " + _importURI_1);
        String _plus_1 = (_plus + ", maybe \"platform:\" prefix is missing");
        this.error(_plus_1, imp, 
          imp.eClass().getEStructuralFeature(QlsPackage.IMPORT__IMPORT_URI), QLSValidator.INVALID_URI);
      }
      final URI uri = QLSUtils.resolveImportURI(imp.getImportURI(), imp.eResource());
      boolean _exists = imp.eResource().getResourceSet().getURIConverter().exists(uri, null);
      boolean _not = (!_exists);
      if (_not) {
        this.error((("File " + uri) + " not found"), imp, 
          imp.eClass().getEStructuralFeature(QlsPackage.IMPORT__IMPORT_URI));
      }
    }
  }
}
