/*
 * generated by Xtext 2.31.0
 */
grammar InternalQLS;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.gemoc.qls.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.gemoc.qls.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.gemoc.qls.services.QLSGrammarAccess;

}
@parser::members {
	private QLSGrammarAccess grammarAccess;

	public void setGrammarAccess(QLSGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleQLSModel
entryRuleQLSModel
:
{ before(grammarAccess.getQLSModelRule()); }
	 ruleQLSModel
{ after(grammarAccess.getQLSModelRule()); } 
	 EOF 
;

// Rule QLSModel
ruleQLSModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQLSModelAccess().getGroup()); }
		(rule__QLSModel__Group__0)
		{ after(grammarAccess.getQLSModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeStyle
entryRuleTypeStyle
:
{ before(grammarAccess.getTypeStyleRule()); }
	 ruleTypeStyle
{ after(grammarAccess.getTypeStyleRule()); } 
	 EOF 
;

// Rule TypeStyle
ruleTypeStyle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeStyleAccess().getAlternatives()); }
		(rule__TypeStyle__Alternatives)
		{ after(grammarAccess.getTypeStyleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericTypeStyle
entryRuleNumericTypeStyle
:
{ before(grammarAccess.getNumericTypeStyleRule()); }
	 ruleNumericTypeStyle
{ after(grammarAccess.getNumericTypeStyleRule()); } 
	 EOF 
;

// Rule NumericTypeStyle
ruleNumericTypeStyle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericTypeStyleAccess().getAlternatives()); }
		(rule__NumericTypeStyle__Alternatives)
		{ after(grammarAccess.getNumericTypeStyleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuestionStyle
entryRuleQuestionStyle
:
{ before(grammarAccess.getQuestionStyleRule()); }
	 ruleQuestionStyle
{ after(grammarAccess.getQuestionStyleRule()); } 
	 EOF 
;

// Rule QuestionStyle
ruleQuestionStyle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuestionStyleAccess().getGroup()); }
		(rule__QuestionStyle__Group__0)
		{ after(grammarAccess.getQuestionStyleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabelStyle
entryRuleLabelStyle
:
{ before(grammarAccess.getLabelStyleRule()); }
	 ruleLabelStyle
{ after(grammarAccess.getLabelStyleRule()); } 
	 EOF 
;

// Rule LabelStyle
ruleLabelStyle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelStyleAccess().getGroup()); }
		(rule__LabelStyle__Group__0)
		{ after(grammarAccess.getLabelStyleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanTypeStyle
entryRuleBooleanTypeStyle
:
{ before(grammarAccess.getBooleanTypeStyleRule()); }
	 ruleBooleanTypeStyle
{ after(grammarAccess.getBooleanTypeStyleRule()); } 
	 EOF 
;

// Rule BooleanTypeStyle
ruleBooleanTypeStyle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanTypeStyleAccess().getGroup()); }
		(rule__BooleanTypeStyle__Group__0)
		{ after(grammarAccess.getBooleanTypeStyleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericTypeTextFieldStyle
entryRuleNumericTypeTextFieldStyle
:
{ before(grammarAccess.getNumericTypeTextFieldStyleRule()); }
	 ruleNumericTypeTextFieldStyle
{ after(grammarAccess.getNumericTypeTextFieldStyleRule()); } 
	 EOF 
;

// Rule NumericTypeTextFieldStyle
ruleNumericTypeTextFieldStyle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericTypeTextFieldStyleAccess().getGroup()); }
		(rule__NumericTypeTextFieldStyle__Group__0)
		{ after(grammarAccess.getNumericTypeTextFieldStyleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericTypeSpinnerStyle
entryRuleNumericTypeSpinnerStyle
:
{ before(grammarAccess.getNumericTypeSpinnerStyleRule()); }
	 ruleNumericTypeSpinnerStyle
{ after(grammarAccess.getNumericTypeSpinnerStyleRule()); } 
	 EOF 
;

// Rule NumericTypeSpinnerStyle
ruleNumericTypeSpinnerStyle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericTypeSpinnerStyleAccess().getGroup()); }
		(rule__NumericTypeSpinnerStyle__Group__0)
		{ after(grammarAccess.getNumericTypeSpinnerStyleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTextTypeStyle
entryRuleTextTypeStyle
:
{ before(grammarAccess.getTextTypeStyleRule()); }
	 ruleTextTypeStyle
{ after(grammarAccess.getTextTypeStyleRule()); } 
	 EOF 
;

// Rule TextTypeStyle
ruleTextTypeStyle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextTypeStyleAccess().getGroup()); }
		(rule__TextTypeStyle__Group__0)
		{ after(grammarAccess.getTextTypeStyleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueType
entryRuleValueType
:
{ before(grammarAccess.getValueTypeRule()); }
	 ruleValueType
{ after(grammarAccess.getValueTypeRule()); } 
	 EOF 
;

// Rule ValueType
ruleValueType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueTypeAccess().getAlternatives()); }
		(rule__ValueType__Alternatives)
		{ after(grammarAccess.getValueTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getUnaryOrPrimaryExpressionParserRuleCall()); }
		ruleUnaryOrPrimaryExpression
		{ after(grammarAccess.getExpressionAccess().getUnaryOrPrimaryExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryOrPrimaryExpression
entryRuleUnaryOrPrimaryExpression
:
{ before(grammarAccess.getUnaryOrPrimaryExpressionRule()); }
	 ruleUnaryOrPrimaryExpression
{ after(grammarAccess.getUnaryOrPrimaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryOrPrimaryExpression
ruleUnaryOrPrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryOrPrimaryExpressionAccess().getAlternatives()); }
		(rule__UnaryOrPrimaryExpression__Alternatives)
		{ after(grammarAccess.getUnaryOrPrimaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getGroup()); }
		(rule__UnaryExpression__Group__0)
		{ after(grammarAccess.getUnaryExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
		(rule__PrimaryExpression__Alternatives)
		{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfExpression
entryRuleIfExpression
:
{ before(grammarAccess.getIfExpressionRule()); }
	 ruleIfExpression
{ after(grammarAccess.getIfExpressionRule()); } 
	 EOF 
;

// Rule IfExpression
ruleIfExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfExpressionAccess().getGroup()); }
		(rule__IfExpression__Group__0)
		{ after(grammarAccess.getIfExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpression
entryRuleOrExpression
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
		(rule__OrExpression__Group__0)
		{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualExpression
entryRuleEqualExpression
:
{ before(grammarAccess.getEqualExpressionRule()); }
	 ruleEqualExpression
{ after(grammarAccess.getEqualExpressionRule()); } 
	 EOF 
;

// Rule EqualExpression
ruleEqualExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualExpressionAccess().getGroup()); }
		(rule__EqualExpression__Group__0)
		{ after(grammarAccess.getEqualExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisionExpression
entryRuleComparisionExpression
:
{ before(grammarAccess.getComparisionExpressionRule()); }
	 ruleComparisionExpression
{ after(grammarAccess.getComparisionExpressionRule()); } 
	 EOF 
;

// Rule ComparisionExpression
ruleComparisionExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisionExpressionAccess().getGroup()); }
		(rule__ComparisionExpression__Group__0)
		{ after(grammarAccess.getComparisionExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditionExpression
entryRuleAdditionExpression
:
{ before(grammarAccess.getAdditionExpressionRule()); }
	 ruleAdditionExpression
{ after(grammarAccess.getAdditionExpressionRule()); } 
	 EOF 
;

// Rule AdditionExpression
ruleAdditionExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionExpressionAccess().getGroup()); }
		(rule__AdditionExpression__Group__0)
		{ after(grammarAccess.getAdditionExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicationExpression
entryRuleMultiplicationExpression
:
{ before(grammarAccess.getMultiplicationExpressionRule()); }
	 ruleMultiplicationExpression
{ after(grammarAccess.getMultiplicationExpressionRule()); } 
	 EOF 
;

// Rule MultiplicationExpression
ruleMultiplicationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationExpressionAccess().getGroup()); }
		(rule__MultiplicationExpression__Group__0)
		{ after(grammarAccess.getMultiplicationExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCall
entryRuleCall
:
{ before(grammarAccess.getCallRule()); }
	 ruleCall
{ after(grammarAccess.getCallRule()); } 
	 EOF 
;

// Rule Call
ruleCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallAccess().getAlternatives()); }
		(rule__Call__Alternatives)
		{ after(grammarAccess.getCallAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinitionGroup
entryRuleDefinitionGroup
:
{ before(grammarAccess.getDefinitionGroupRule()); }
	 ruleDefinitionGroup
{ after(grammarAccess.getDefinitionGroupRule()); } 
	 EOF 
;

// Rule DefinitionGroup
ruleDefinitionGroup 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionGroupAccess().getGroup()); }
		(rule__DefinitionGroup__Group__0)
		{ after(grammarAccess.getDefinitionGroupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBoolean
entryRuleEBoolean
:
{ before(grammarAccess.getEBooleanRule()); }
	 ruleEBoolean
{ after(grammarAccess.getEBooleanRule()); } 
	 EOF 
;

// Rule EBoolean
ruleEBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBooleanAccess().getAlternatives()); }
		(rule__EBoolean__Alternatives)
		{ after(grammarAccess.getEBooleanAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEDate
entryRuleEDate
:
{ before(grammarAccess.getEDateRule()); }
	 ruleEDate
{ after(grammarAccess.getEDateRule()); } 
	 EOF 
;

// Rule EDate
ruleEDate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEDateAccess().getEDateKeyword()); }
		'EDate'
		{ after(grammarAccess.getEDateAccess().getEDateKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuestionGroup
entryRuleQuestionGroup
:
{ before(grammarAccess.getQuestionGroupRule()); }
	 ruleQuestionGroup
{ after(grammarAccess.getQuestionGroupRule()); } 
	 EOF 
;

// Rule QuestionGroup
ruleQuestionGroup 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuestionGroupAccess().getGroup()); }
		(rule__QuestionGroup__Group__0)
		{ after(grammarAccess.getQuestionGroupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuestion
entryRuleQuestion
:
{ before(grammarAccess.getQuestionRule()); }
	 ruleQuestion
{ after(grammarAccess.getQuestionRule()); } 
	 EOF 
;

// Rule Question
ruleQuestion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuestionAccess().getQuestionDefinitionAssignment()); }
		(rule__Question__QuestionDefinitionAssignment)
		{ after(grammarAccess.getQuestionAccess().getQuestionDefinitionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueType_Impl
entryRuleValueType_Impl
:
{ before(grammarAccess.getValueType_ImplRule()); }
	 ruleValueType_Impl
{ after(grammarAccess.getValueType_ImplRule()); } 
	 EOF 
;

// Rule ValueType_Impl
ruleValueType_Impl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueType_ImplAccess().getGroup()); }
		(rule__ValueType_Impl__Group__0)
		{ after(grammarAccess.getValueType_ImplAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantCall
entryRuleConstantCall
:
{ before(grammarAccess.getConstantCallRule()); }
	 ruleConstantCall
{ after(grammarAccess.getConstantCallRule()); } 
	 EOF 
;

// Rule ConstantCall
ruleConstantCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantCallAccess().getGroup()); }
		(rule__ConstantCall__Group__0)
		{ after(grammarAccess.getConstantCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuestionCall
entryRuleQuestionCall
:
{ before(grammarAccess.getQuestionCallRule()); }
	 ruleQuestionCall
{ after(grammarAccess.getQuestionCallRule()); } 
	 EOF 
;

// Rule QuestionCall
ruleQuestionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuestionCallAccess().getGroup()); }
		(rule__QuestionCall__Group__0)
		{ after(grammarAccess.getQuestionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanValueType
entryRuleBooleanValueType
:
{ before(grammarAccess.getBooleanValueTypeRule()); }
	 ruleBooleanValueType
{ after(grammarAccess.getBooleanValueTypeRule()); } 
	 EOF 
;

// Rule BooleanValueType
ruleBooleanValueType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanValueTypeAccess().getGroup()); }
		(rule__BooleanValueType__Group__0)
		{ after(grammarAccess.getBooleanValueTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerValueType
entryRuleIntegerValueType
:
{ before(grammarAccess.getIntegerValueTypeRule()); }
	 ruleIntegerValueType
{ after(grammarAccess.getIntegerValueTypeRule()); } 
	 EOF 
;

// Rule IntegerValueType
ruleIntegerValueType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerValueTypeAccess().getGroup()); }
		(rule__IntegerValueType__Group__0)
		{ after(grammarAccess.getIntegerValueTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDecimalValueType
entryRuleDecimalValueType
:
{ before(grammarAccess.getDecimalValueTypeRule()); }
	 ruleDecimalValueType
{ after(grammarAccess.getDecimalValueTypeRule()); } 
	 EOF 
;

// Rule DecimalValueType
ruleDecimalValueType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDecimalValueTypeAccess().getGroup()); }
		(rule__DecimalValueType__Group__0)
		{ after(grammarAccess.getDecimalValueTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDateValueType
entryRuleDateValueType
:
{ before(grammarAccess.getDateValueTypeRule()); }
	 ruleDateValueType
{ after(grammarAccess.getDateValueTypeRule()); } 
	 EOF 
;

// Rule DateValueType
ruleDateValueType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateValueTypeAccess().getGroup()); }
		(rule__DateValueType__Group__0)
		{ after(grammarAccess.getDateValueTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerationValueType
entryRuleEnumerationValueType
:
{ before(grammarAccess.getEnumerationValueTypeRule()); }
	 ruleEnumerationValueType
{ after(grammarAccess.getEnumerationValueTypeRule()); } 
	 EOF 
;

// Rule EnumerationValueType
ruleEnumerationValueType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationValueTypeAccess().getGroup()); }
		(rule__EnumerationValueType__Group__0)
		{ after(grammarAccess.getEnumerationValueTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringValueType
entryRuleStringValueType
:
{ before(grammarAccess.getStringValueTypeRule()); }
	 ruleStringValueType
{ after(grammarAccess.getStringValueTypeRule()); } 
	 EOF 
;

// Rule StringValueType
ruleStringValueType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringValueTypeAccess().getGroup()); }
		(rule__StringValueType__Group__0)
		{ after(grammarAccess.getStringValueTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerationLiteral
entryRuleEnumerationLiteral
:
{ before(grammarAccess.getEnumerationLiteralRule()); }
	 ruleEnumerationLiteral
{ after(grammarAccess.getEnumerationLiteralRule()); } 
	 EOF 
;

// Rule EnumerationLiteral
ruleEnumerationLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationLiteralAccess().getGroup()); }
		(rule__EnumerationLiteral__Group__0)
		{ after(grammarAccess.getEnumerationLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerValue
entryRuleIntegerValue
:
{ before(grammarAccess.getIntegerValueRule()); }
	 ruleIntegerValue
{ after(grammarAccess.getIntegerValueRule()); } 
	 EOF 
;

// Rule IntegerValue
ruleIntegerValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerValueAccess().getGroup()); }
		(rule__IntegerValue__Group__0)
		{ after(grammarAccess.getIntegerValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringValue
entryRuleStringValue
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringValueAccess().getGroup()); }
		(rule__StringValue__Group__0)
		{ after(grammarAccess.getStringValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanValue
entryRuleBooleanValue
:
{ before(grammarAccess.getBooleanValueRule()); }
	 ruleBooleanValue
{ after(grammarAccess.getBooleanValueRule()); } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanValueAccess().getGroup()); }
		(rule__BooleanValue__Group__0)
		{ after(grammarAccess.getBooleanValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerationCall
entryRuleEnumerationCall
:
{ before(grammarAccess.getEnumerationCallRule()); }
	 ruleEnumerationCall
{ after(grammarAccess.getEnumerationCallRule()); } 
	 EOF 
;

// Rule EnumerationCall
ruleEnumerationCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationCallAccess().getGroup()); }
		(rule__EnumerationCall__Group__0)
		{ after(grammarAccess.getEnumerationCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDateValue
entryRuleDateValue
:
{ before(grammarAccess.getDateValueRule()); }
	 ruleDateValue
{ after(grammarAccess.getDateValueRule()); } 
	 EOF 
;

// Rule DateValue
ruleDateValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateValueAccess().getGroup()); }
		(rule__DateValue__Group__0)
		{ after(grammarAccess.getDateValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDecimalValue
entryRuleDecimalValue
:
{ before(grammarAccess.getDecimalValueRule()); }
	 ruleDecimalValue
{ after(grammarAccess.getDecimalValueRule()); } 
	 EOF 
;

// Rule DecimalValue
ruleDecimalValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDecimalValueAccess().getGroup()); }
		(rule__DecimalValue__Group__0)
		{ after(grammarAccess.getDecimalValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEDouble
entryRuleEDouble
:
{ before(grammarAccess.getEDoubleRule()); }
	 ruleEDouble
{ after(grammarAccess.getEDoubleRule()); } 
	 EOF 
;

// Rule EDouble
ruleEDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEDoubleAccess().getGroup()); }
		(rule__EDouble__Group__0)
		{ after(grammarAccess.getEDoubleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuestionDefinition
entryRuleQuestionDefinition
:
{ before(grammarAccess.getQuestionDefinitionRule()); }
	 ruleQuestionDefinition
{ after(grammarAccess.getQuestionDefinitionRule()); } 
	 EOF 
;

// Rule QuestionDefinition
ruleQuestionDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuestionDefinitionAccess().getGroup()); }
		(rule__QuestionDefinition__Group__0)
		{ after(grammarAccess.getQuestionDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BooleanStyleKind
ruleBooleanStyleKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanStyleKindAccess().getAlternatives()); }
		(rule__BooleanStyleKind__Alternatives)
		{ after(grammarAccess.getBooleanStyleKindAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BinaryOperatorKind
ruleBinaryOperatorKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryOperatorKindAccess().getAlternatives()); }
		(rule__BinaryOperatorKind__Alternatives)
		{ after(grammarAccess.getBinaryOperatorKindAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule UnaryOperatorKind
ruleUnaryOperatorKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorKindAccess().getAlternatives()); }
		(rule__UnaryOperatorKind__Alternatives)
		{ after(grammarAccess.getUnaryOperatorKindAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AdditionOperatorKind
ruleAdditionOperatorKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionOperatorKindAccess().getAlternatives()); }
		(rule__AdditionOperatorKind__Alternatives)
		{ after(grammarAccess.getAdditionOperatorKindAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule MultiplicationOperatorKind
ruleMultiplicationOperatorKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationOperatorKindAccess().getAlternatives()); }
		(rule__MultiplicationOperatorKind__Alternatives)
		{ after(grammarAccess.getMultiplicationOperatorKindAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule EqualOperatorKind
ruleEqualOperatorKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualOperatorKindAccess().getEQUALEnumLiteralDeclaration()); }
		('=')
		{ after(grammarAccess.getEqualOperatorKindAccess().getEQUALEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ComparisionOperatorKind
ruleComparisionOperatorKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisionOperatorKindAccess().getAlternatives()); }
		(rule__ComparisionOperatorKind__Alternatives)
		{ after(grammarAccess.getComparisionOperatorKindAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AndOperatorKind
ruleAndOperatorKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndOperatorKindAccess().getANDEnumLiteralDeclaration()); }
		('and')
		{ after(grammarAccess.getAndOperatorKindAccess().getANDEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule OrOperatorKind
ruleOrOperatorKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrOperatorKindAccess().getOREnumLiteralDeclaration()); }
		('or')
		{ after(grammarAccess.getOrOperatorKindAccess().getOREnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeStyle__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeStyleAccess().getBooleanTypeStyleParserRuleCall_0()); }
		ruleBooleanTypeStyle
		{ after(grammarAccess.getTypeStyleAccess().getBooleanTypeStyleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeStyleAccess().getNumericTypeStyleParserRuleCall_1()); }
		ruleNumericTypeStyle
		{ after(grammarAccess.getTypeStyleAccess().getNumericTypeStyleParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeStyleAccess().getTextTypeStyleParserRuleCall_2()); }
		ruleTextTypeStyle
		{ after(grammarAccess.getTypeStyleAccess().getTextTypeStyleParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeStyle__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericTypeStyleAccess().getNumericTypeTextFieldStyleParserRuleCall_0()); }
		ruleNumericTypeTextFieldStyle
		{ after(grammarAccess.getNumericTypeStyleAccess().getNumericTypeTextFieldStyleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericTypeStyleAccess().getNumericTypeSpinnerStyleParserRuleCall_1()); }
		ruleNumericTypeSpinnerStyle
		{ after(grammarAccess.getNumericTypeStyleAccess().getNumericTypeSpinnerStyleParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueTypeAccess().getValueType_ImplParserRuleCall_0()); }
		ruleValueType_Impl
		{ after(grammarAccess.getValueTypeAccess().getValueType_ImplParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueTypeAccess().getBooleanValueTypeParserRuleCall_1()); }
		ruleBooleanValueType
		{ after(grammarAccess.getValueTypeAccess().getBooleanValueTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueTypeAccess().getIntegerValueTypeParserRuleCall_2()); }
		ruleIntegerValueType
		{ after(grammarAccess.getValueTypeAccess().getIntegerValueTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueTypeAccess().getDecimalValueTypeParserRuleCall_3()); }
		ruleDecimalValueType
		{ after(grammarAccess.getValueTypeAccess().getDecimalValueTypeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getValueTypeAccess().getDateValueTypeParserRuleCall_4()); }
		ruleDateValueType
		{ after(grammarAccess.getValueTypeAccess().getDateValueTypeParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getValueTypeAccess().getEnumerationValueTypeParserRuleCall_5()); }
		ruleEnumerationValueType
		{ after(grammarAccess.getValueTypeAccess().getEnumerationValueTypeParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getValueTypeAccess().getStringValueTypeParserRuleCall_6()); }
		ruleStringValueType
		{ after(grammarAccess.getValueTypeAccess().getStringValueTypeParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOrPrimaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOrPrimaryExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getUnaryOrPrimaryExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOrPrimaryExpressionAccess().getUnaryExpressionParserRuleCall_1()); }
		ruleUnaryExpression
		{ after(grammarAccess.getUnaryOrPrimaryExpressionAccess().getUnaryExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getCallParserRuleCall_0()); }
		ruleCall
		{ after(grammarAccess.getPrimaryExpressionAccess().getCallParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getIfExpressionParserRuleCall_1()); }
		ruleIfExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getIfExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
		(rule__PrimaryExpression__Group_2__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getOrExpressionParserRuleCall_2_1_0()); }
		ruleOrExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getOrExpressionParserRuleCall_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getUnaryExpressionParserRuleCall_2_1_1()); }
		ruleUnaryExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getUnaryExpressionParserRuleCall_2_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallAccess().getConstantCallParserRuleCall_0()); }
		ruleConstantCall
		{ after(grammarAccess.getCallAccess().getConstantCallParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCallAccess().getQuestionCallParserRuleCall_1()); }
		ruleQuestionCall
		{ after(grammarAccess.getCallAccess().getQuestionCallParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCallAccess().getEnumerationCallParserRuleCall_2()); }
		ruleEnumerationCall
		{ after(grammarAccess.getCallAccess().getEnumerationCallParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getIntegerValueParserRuleCall_0()); }
		ruleIntegerValue
		{ after(grammarAccess.getValueAccess().getIntegerValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getStringValueParserRuleCall_1()); }
		ruleStringValue
		{ after(grammarAccess.getValueAccess().getStringValueParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getBooleanValueParserRuleCall_2()); }
		ruleBooleanValue
		{ after(grammarAccess.getValueAccess().getBooleanValueParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getDateValueParserRuleCall_3()); }
		ruleDateValue
		{ after(grammarAccess.getValueAccess().getDateValueParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getDecimalValueParserRuleCall_4()); }
		ruleDecimalValue
		{ after(grammarAccess.getValueAccess().getDecimalValueParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionGroup__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionGroupAccess().getQuestionDefinitionsAssignment_2_0()); }
		(rule__DefinitionGroup__QuestionDefinitionsAssignment_2_0)
		{ after(grammarAccess.getDefinitionGroupAccess().getQuestionDefinitionsAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionGroupAccess().getDataTypesAssignment_2_1()); }
		(rule__DefinitionGroup__DataTypesAssignment_2_1)
		{ after(grammarAccess.getDefinitionGroupAccess().getDataTypesAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBoolean__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionGroup__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionGroupAccess().getQuestionGroupsAssignment_3_0()); }
		(rule__QuestionGroup__QuestionGroupsAssignment_3_0)
		{ after(grammarAccess.getQuestionGroupAccess().getQuestionGroupsAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getQuestionGroupAccess().getQuestionsAssignment_3_1()); }
		(rule__QuestionGroup__QuestionsAssignment_3_1)
		{ after(grammarAccess.getQuestionGroupAccess().getQuestionsAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantCall__ValueAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantCallAccess().getValueStringValueParserRuleCall_1_0_0()); }
		ruleStringValue
		{ after(grammarAccess.getConstantCallAccess().getValueStringValueParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantCallAccess().getValueIntegerValueParserRuleCall_1_0_1()); }
		ruleIntegerValue
		{ after(grammarAccess.getConstantCallAccess().getValueIntegerValueParserRuleCall_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantCallAccess().getValueBooleanValueParserRuleCall_1_0_2()); }
		ruleBooleanValue
		{ after(grammarAccess.getConstantCallAccess().getValueBooleanValueParserRuleCall_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getConstantCallAccess().getValueDecimalValueParserRuleCall_1_0_3()); }
		ruleDecimalValue
		{ after(grammarAccess.getConstantCallAccess().getValueDecimalValueParserRuleCall_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Alternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEDoubleAccess().getEKeyword_3_0_0()); }
		'E'
		{ after(grammarAccess.getEDoubleAccess().getEKeyword_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEDoubleAccess().getEKeyword_3_0_1()); }
		'e'
		{ after(grammarAccess.getEDoubleAccess().getEKeyword_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanStyleKind__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanStyleKindAccess().getCHECKBOXEnumLiteralDeclaration_0()); }
		('CHECKBOX')
		{ after(grammarAccess.getBooleanStyleKindAccess().getCHECKBOXEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanStyleKindAccess().getTWO_RADIOEnumLiteralDeclaration_1()); }
		('TWO_RADIO')
		{ after(grammarAccess.getBooleanStyleKindAccess().getTWO_RADIOEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanStyleKindAccess().getDROPDOWNEnumLiteralDeclaration_2()); }
		('DROPDOWN')
		{ after(grammarAccess.getBooleanStyleKindAccess().getDROPDOWNEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperatorKind__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryOperatorKindAccess().getPLUSEnumLiteralDeclaration_0()); }
		('PLUS')
		{ after(grammarAccess.getBinaryOperatorKindAccess().getPLUSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorKindAccess().getMINUSEnumLiteralDeclaration_1()); }
		('MINUS')
		{ after(grammarAccess.getBinaryOperatorKindAccess().getMINUSEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorKindAccess().getMULTEnumLiteralDeclaration_2()); }
		('MULT')
		{ after(grammarAccess.getBinaryOperatorKindAccess().getMULTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorKindAccess().getDIVEnumLiteralDeclaration_3()); }
		('DIV')
		{ after(grammarAccess.getBinaryOperatorKindAccess().getDIVEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorKindAccess().getEQUALEnumLiteralDeclaration_4()); }
		('EQUAL')
		{ after(grammarAccess.getBinaryOperatorKindAccess().getEQUALEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorKindAccess().getNOTEQUALEnumLiteralDeclaration_5()); }
		('NOTEQUAL')
		{ after(grammarAccess.getBinaryOperatorKindAccess().getNOTEQUALEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorKindAccess().getGREATEREnumLiteralDeclaration_6()); }
		('GREATER')
		{ after(grammarAccess.getBinaryOperatorKindAccess().getGREATEREnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorKindAccess().getLOWEREnumLiteralDeclaration_7()); }
		('LOWER')
		{ after(grammarAccess.getBinaryOperatorKindAccess().getLOWEREnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorKindAccess().getGREATEROREQUALEnumLiteralDeclaration_8()); }
		('GREATEROREQUAL')
		{ after(grammarAccess.getBinaryOperatorKindAccess().getGREATEROREQUALEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorKindAccess().getLOWEROREQUALEnumLiteralDeclaration_9()); }
		('LOWEROREQUAL')
		{ after(grammarAccess.getBinaryOperatorKindAccess().getLOWEROREQUALEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorKindAccess().getANDEnumLiteralDeclaration_10()); }
		('AND')
		{ after(grammarAccess.getBinaryOperatorKindAccess().getANDEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorKindAccess().getOREnumLiteralDeclaration_11()); }
		('OR')
		{ after(grammarAccess.getBinaryOperatorKindAccess().getOREnumLiteralDeclaration_11()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperatorKind__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorKindAccess().getUNARYMINUSEnumLiteralDeclaration_0()); }
		('-')
		{ after(grammarAccess.getUnaryOperatorKindAccess().getUNARYMINUSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorKindAccess().getNOTEnumLiteralDeclaration_1()); }
		('not')
		{ after(grammarAccess.getUnaryOperatorKindAccess().getNOTEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionOperatorKind__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionOperatorKindAccess().getPLUSEnumLiteralDeclaration_0()); }
		('+')
		{ after(grammarAccess.getAdditionOperatorKindAccess().getPLUSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditionOperatorKindAccess().getMINUSEnumLiteralDeclaration_1()); }
		('-')
		{ after(grammarAccess.getAdditionOperatorKindAccess().getMINUSEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationOperatorKind__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationOperatorKindAccess().getMULTEnumLiteralDeclaration_0()); }
		('*')
		{ after(grammarAccess.getMultiplicationOperatorKindAccess().getMULTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicationOperatorKindAccess().getDIVEnumLiteralDeclaration_1()); }
		('/')
		{ after(grammarAccess.getMultiplicationOperatorKindAccess().getDIVEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisionOperatorKind__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisionOperatorKindAccess().getGREATEREnumLiteralDeclaration_0()); }
		('>')
		{ after(grammarAccess.getComparisionOperatorKindAccess().getGREATEREnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisionOperatorKindAccess().getLOWEREnumLiteralDeclaration_1()); }
		('<')
		{ after(grammarAccess.getComparisionOperatorKindAccess().getLOWEREnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisionOperatorKindAccess().getGREATEROREQUALEnumLiteralDeclaration_2()); }
		('>=')
		{ after(grammarAccess.getComparisionOperatorKindAccess().getGREATEROREQUALEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisionOperatorKindAccess().getLOWEROREQUALEnumLiteralDeclaration_3()); }
		('<=')
		{ after(grammarAccess.getComparisionOperatorKindAccess().getLOWEROREQUALEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QLSModel__Group__0__Impl
	rule__QLSModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQLSModelAccess().getQLSModelAction_0()); }
	()
	{ after(grammarAccess.getQLSModelAccess().getQLSModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QLSModel__Group__1__Impl
	rule__QLSModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQLSModelAccess().getImportsAssignment_1()); }
	(rule__QLSModel__ImportsAssignment_1)*
	{ after(grammarAccess.getQLSModelAccess().getImportsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QLSModel__Group__2__Impl
	rule__QLSModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQLSModelAccess().getQLSModelKeyword_2()); }
	'QLSModel'
	{ after(grammarAccess.getQLSModelAccess().getQLSModelKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QLSModel__Group__3__Impl
	rule__QLSModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQLSModelAccess().getStyledQLModelAssignment_3()); }
	(rule__QLSModel__StyledQLModelAssignment_3)
	{ after(grammarAccess.getQLSModelAccess().getStyledQLModelAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QLSModel__Group__4__Impl
	rule__QLSModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQLSModelAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getQLSModelAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QLSModel__Group__5__Impl
	rule__QLSModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQLSModelAccess().getQuestionStylesKeyword_5()); }
	'questionStyles'
	{ after(grammarAccess.getQLSModelAccess().getQuestionStylesKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QLSModel__Group__6__Impl
	rule__QLSModel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQLSModelAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getQLSModelAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QLSModel__Group__7__Impl
	rule__QLSModel__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQLSModelAccess().getQuestionStylesAssignment_7()); }
	(rule__QLSModel__QuestionStylesAssignment_7)*
	{ after(grammarAccess.getQLSModelAccess().getQuestionStylesAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QLSModel__Group__8__Impl
	rule__QLSModel__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQLSModelAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getQLSModelAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QLSModel__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQLSModelAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getQLSModelAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportAction_0()); }
	()
	{ after(grammarAccess.getImportAccess().getImportAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_1()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportURIAssignment_2()); }
	(rule__Import__ImportURIAssignment_2)
	{ after(grammarAccess.getImportAccess().getImportURIAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuestionStyle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionStyle__Group__0__Impl
	rule__QuestionStyle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionStyleAccess().getStyledQuestionKeyword_0()); }
	'styledQuestion'
	{ after(grammarAccess.getQuestionStyleAccess().getStyledQuestionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionStyle__Group__1__Impl
	rule__QuestionStyle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionStyleAccess().getStyledQuestionAssignment_1()); }
	(rule__QuestionStyle__StyledQuestionAssignment_1)
	{ after(grammarAccess.getQuestionStyleAccess().getStyledQuestionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionStyle__Group__2__Impl
	rule__QuestionStyle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionStyleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getQuestionStyleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionStyle__Group__3__Impl
	rule__QuestionStyle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionStyleAccess().getGroup_3()); }
	(rule__QuestionStyle__Group_3__0)?
	{ after(grammarAccess.getQuestionStyleAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionStyle__Group__4__Impl
	rule__QuestionStyle__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionStyleAccess().getGroup_4()); }
	(rule__QuestionStyle__Group_4__0)?
	{ after(grammarAccess.getQuestionStyleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionStyle__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionStyleAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getQuestionStyleAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuestionStyle__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionStyle__Group_3__0__Impl
	rule__QuestionStyle__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionStyleAccess().getLabelStyleKeyword_3_0()); }
	'labelStyle'
	{ after(grammarAccess.getQuestionStyleAccess().getLabelStyleKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionStyle__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionStyleAccess().getLabelStyleAssignment_3_1()); }
	(rule__QuestionStyle__LabelStyleAssignment_3_1)
	{ after(grammarAccess.getQuestionStyleAccess().getLabelStyleAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuestionStyle__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionStyle__Group_4__0__Impl
	rule__QuestionStyle__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionStyleAccess().getTypeStyleKeyword_4_0()); }
	'typeStyle'
	{ after(grammarAccess.getQuestionStyleAccess().getTypeStyleKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionStyle__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionStyleAccess().getTypeStyleAssignment_4_1()); }
	(rule__QuestionStyle__TypeStyleAssignment_4_1)
	{ after(grammarAccess.getQuestionStyleAccess().getTypeStyleAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LabelStyle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabelStyle__Group__0__Impl
	rule__LabelStyle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelStyle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelStyleAccess().getLabelStyleAction_0()); }
	()
	{ after(grammarAccess.getLabelStyleAccess().getLabelStyleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelStyle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabelStyle__Group__1__Impl
	rule__LabelStyle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelStyle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelStyleAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getLabelStyleAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelStyle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabelStyle__Group__2__Impl
	rule__LabelStyle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelStyle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelStyleAccess().getItalicAssignment_2()); }
	(rule__LabelStyle__ItalicAssignment_2)?
	{ after(grammarAccess.getLabelStyleAccess().getItalicAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelStyle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabelStyle__Group__3__Impl
	rule__LabelStyle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelStyle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelStyleAccess().getBoldAssignment_3()); }
	(rule__LabelStyle__BoldAssignment_3)?
	{ after(grammarAccess.getLabelStyleAccess().getBoldAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelStyle__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabelStyle__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelStyle__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelStyleAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getLabelStyleAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanTypeStyle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanTypeStyle__Group__0__Impl
	rule__BooleanTypeStyle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeStyle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTypeStyleAccess().getBooleanStyleKeyword_0()); }
	'BooleanStyle'
	{ after(grammarAccess.getBooleanTypeStyleAccess().getBooleanStyleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeStyle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanTypeStyle__Group__1__Impl
	rule__BooleanTypeStyle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeStyle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTypeStyleAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBooleanTypeStyleAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeStyle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanTypeStyle__Group__2__Impl
	rule__BooleanTypeStyle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeStyle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTypeStyleAccess().getBooleanStyleKindAssignment_2()); }
	(rule__BooleanTypeStyle__BooleanStyleKindAssignment_2)
	{ after(grammarAccess.getBooleanTypeStyleAccess().getBooleanStyleKindAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeStyle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanTypeStyle__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeStyle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanTypeStyleAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getBooleanTypeStyleAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumericTypeTextFieldStyle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericTypeTextFieldStyle__Group__0__Impl
	rule__NumericTypeTextFieldStyle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeTextFieldStyle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeTextFieldStyleAccess().getNumericTypeTextFieldStyleAction_0()); }
	()
	{ after(grammarAccess.getNumericTypeTextFieldStyleAccess().getNumericTypeTextFieldStyleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeTextFieldStyle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericTypeTextFieldStyle__Group__1__Impl
	rule__NumericTypeTextFieldStyle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeTextFieldStyle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeTextFieldStyleAccess().getNumericStyleKeyword_1()); }
	'NumericStyle'
	{ after(grammarAccess.getNumericTypeTextFieldStyleAccess().getNumericStyleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeTextFieldStyle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericTypeTextFieldStyle__Group__2__Impl
	rule__NumericTypeTextFieldStyle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeTextFieldStyle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeTextFieldStyleAccess().getTextFieldKeyword_2()); }
	'textField'
	{ after(grammarAccess.getNumericTypeTextFieldStyleAccess().getTextFieldKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeTextFieldStyle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericTypeTextFieldStyle__Group__3__Impl
	rule__NumericTypeTextFieldStyle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeTextFieldStyle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeTextFieldStyleAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getNumericTypeTextFieldStyleAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeTextFieldStyle__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericTypeTextFieldStyle__Group__4__Impl
	rule__NumericTypeTextFieldStyle__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeTextFieldStyle__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeTextFieldStyleAccess().getGroup_4()); }
	(rule__NumericTypeTextFieldStyle__Group_4__0)?
	{ after(grammarAccess.getNumericTypeTextFieldStyleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeTextFieldStyle__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericTypeTextFieldStyle__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeTextFieldStyle__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeTextFieldStyleAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getNumericTypeTextFieldStyleAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumericTypeTextFieldStyle__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericTypeTextFieldStyle__Group_4__0__Impl
	rule__NumericTypeTextFieldStyle__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeTextFieldStyle__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeTextFieldStyleAccess().getStepKeyword_4_0()); }
	'step'
	{ after(grammarAccess.getNumericTypeTextFieldStyleAccess().getStepKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeTextFieldStyle__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericTypeTextFieldStyle__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeTextFieldStyle__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeTextFieldStyleAccess().getStepAssignment_4_1()); }
	(rule__NumericTypeTextFieldStyle__StepAssignment_4_1)
	{ after(grammarAccess.getNumericTypeTextFieldStyleAccess().getStepAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumericTypeSpinnerStyle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericTypeSpinnerStyle__Group__0__Impl
	rule__NumericTypeSpinnerStyle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeSpinnerStyle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeSpinnerStyleAccess().getNumericSpinnerStyleAction_0()); }
	()
	{ after(grammarAccess.getNumericTypeSpinnerStyleAccess().getNumericSpinnerStyleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeSpinnerStyle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericTypeSpinnerStyle__Group__1__Impl
	rule__NumericTypeSpinnerStyle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeSpinnerStyle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeSpinnerStyleAccess().getNumericStyleKeyword_1()); }
	'NumericStyle'
	{ after(grammarAccess.getNumericTypeSpinnerStyleAccess().getNumericStyleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeSpinnerStyle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericTypeSpinnerStyle__Group__2__Impl
	rule__NumericTypeSpinnerStyle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeSpinnerStyle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeSpinnerStyleAccess().getSpinnerKeyword_2()); }
	'spinner'
	{ after(grammarAccess.getNumericTypeSpinnerStyleAccess().getSpinnerKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeSpinnerStyle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericTypeSpinnerStyle__Group__3__Impl
	rule__NumericTypeSpinnerStyle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeSpinnerStyle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeSpinnerStyleAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getNumericTypeSpinnerStyleAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeSpinnerStyle__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericTypeSpinnerStyle__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeSpinnerStyle__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericTypeSpinnerStyleAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getNumericTypeSpinnerStyleAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TextTypeStyle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextTypeStyle__Group__0__Impl
	rule__TextTypeStyle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextTypeStyle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextTypeStyleAccess().getTextTypeStyleAction_0()); }
	()
	{ after(grammarAccess.getTextTypeStyleAccess().getTextTypeStyleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextTypeStyle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextTypeStyle__Group__1__Impl
	rule__TextTypeStyle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TextTypeStyle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextTypeStyleAccess().getTextStyleKeyword_1()); }
	'TextStyle'
	{ after(grammarAccess.getTextTypeStyleAccess().getTextStyleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextTypeStyle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextTypeStyle__Group__2__Impl
	rule__TextTypeStyle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TextTypeStyle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextTypeStyleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTextTypeStyleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextTypeStyle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextTypeStyle__Group__3__Impl
	rule__TextTypeStyle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TextTypeStyle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextTypeStyleAccess().getMultilineAssignment_3()); }
	(rule__TextTypeStyle__MultilineAssignment_3)?
	{ after(grammarAccess.getTextTypeStyleAccess().getMultilineAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextTypeStyle__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextTypeStyle__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextTypeStyle__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextTypeStyleAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getTextTypeStyleAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__0__Impl
	rule__UnaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getBasicUnaryExpressionAction_0()); }
	()
	{ after(grammarAccess.getUnaryExpressionAccess().getBasicUnaryExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__1__Impl
	rule__UnaryExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_1()); }
	(rule__UnaryExpression__OperatorAssignment_1)
	{ after(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getOperandAssignment_2()); }
	(rule__UnaryExpression__OperandAssignment_2)
	{ after(grammarAccess.getUnaryExpressionAccess().getOperandAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_2__0__Impl
	rule__PrimaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_2__1__Impl
	rule__PrimaryExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives_2_1()); }
	(rule__PrimaryExpression__Alternatives_2_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__0__Impl
	rule__IfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfExpressionAction_0()); }
	()
	{ after(grammarAccess.getIfExpressionAccess().getIfExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__1__Impl
	rule__IfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfKeyword_1()); }
	'if'
	{ after(grammarAccess.getIfExpressionAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__2__Impl
	rule__IfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getConditionAssignment_2()); }
	(rule__IfExpression__ConditionAssignment_2)
	{ after(grammarAccess.getIfExpressionAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__3__Impl
	rule__IfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getThenKeyword_3()); }
	'then'
	{ after(grammarAccess.getIfExpressionAccess().getThenKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__4__Impl
	rule__IfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getThenExpressionAssignment_4()); }
	(rule__IfExpression__ThenExpressionAssignment_4)
	{ after(grammarAccess.getIfExpressionAccess().getThenExpressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__5__Impl
	rule__IfExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getGroup_5()); }
	(rule__IfExpression__Group_5__0)?
	{ after(grammarAccess.getIfExpressionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getEndifKeyword_6()); }
	'endif'
	{ after(grammarAccess.getIfExpressionAccess().getEndifKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_5__0__Impl
	rule__IfExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseKeyword_5_0()); }
	'else'
	{ after(grammarAccess.getIfExpressionAccess().getElseKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseExpressionAssignment_5_1()); }
	(rule__IfExpression__ElseExpressionAssignment_5_1)
	{ after(grammarAccess.getIfExpressionAccess().getElseExpressionAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
	{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
	(rule__OrExpression__Group_1__0)*
	{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getBasicBinaryExpressionLhsOperandAction_1_0()); }
	()
	{ after(grammarAccess.getOrExpressionAccess().getBasicBinaryExpressionLhsOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__1__Impl
	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__OrExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getRhsOperandAssignment_1_2()); }
	(rule__OrExpression__RhsOperandAssignment_1_2)
	{ after(grammarAccess.getOrExpressionAccess().getRhsOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getEqualExpressionParserRuleCall_0()); }
	ruleEqualExpression
	{ after(grammarAccess.getAndExpressionAccess().getEqualExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)*
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getBasicBinaryExpressionLhsOperandAction_1_0()); }
	()
	{ after(grammarAccess.getAndExpressionAccess().getBasicBinaryExpressionLhsOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__AndExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRhsOperandAssignment_1_2()); }
	(rule__AndExpression__RhsOperandAssignment_1_2)
	{ after(grammarAccess.getAndExpressionAccess().getRhsOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualExpression__Group__0__Impl
	rule__EqualExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualExpressionAccess().getComparisionExpressionParserRuleCall_0()); }
	ruleComparisionExpression
	{ after(grammarAccess.getEqualExpressionAccess().getComparisionExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualExpressionAccess().getGroup_1()); }
	(rule__EqualExpression__Group_1__0)*
	{ after(grammarAccess.getEqualExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualExpression__Group_1__0__Impl
	rule__EqualExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualExpressionAccess().getBasicBinaryExpressionLhsOperandAction_1_0()); }
	()
	{ after(grammarAccess.getEqualExpressionAccess().getBasicBinaryExpressionLhsOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualExpression__Group_1__1__Impl
	rule__EqualExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__EqualExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getEqualExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualExpressionAccess().getRhsOperandAssignment_1_2()); }
	(rule__EqualExpression__RhsOperandAssignment_1_2)
	{ after(grammarAccess.getEqualExpressionAccess().getRhsOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisionExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisionExpression__Group__0__Impl
	rule__ComparisionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisionExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisionExpressionAccess().getAdditionExpressionParserRuleCall_0()); }
	ruleAdditionExpression
	{ after(grammarAccess.getComparisionExpressionAccess().getAdditionExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisionExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisionExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisionExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisionExpressionAccess().getGroup_1()); }
	(rule__ComparisionExpression__Group_1__0)*
	{ after(grammarAccess.getComparisionExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisionExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisionExpression__Group_1__0__Impl
	rule__ComparisionExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisionExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisionExpressionAccess().getBasicBinaryExpressionLhsOperandAction_1_0()); }
	()
	{ after(grammarAccess.getComparisionExpressionAccess().getBasicBinaryExpressionLhsOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisionExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisionExpression__Group_1__1__Impl
	rule__ComparisionExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisionExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisionExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__ComparisionExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getComparisionExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisionExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisionExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisionExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisionExpressionAccess().getRhsOperandAssignment_1_2()); }
	(rule__ComparisionExpression__RhsOperandAssignment_1_2)
	{ after(grammarAccess.getComparisionExpressionAccess().getRhsOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group__0__Impl
	rule__AdditionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getMultiplicationExpressionParserRuleCall_0()); }
	ruleMultiplicationExpression
	{ after(grammarAccess.getAdditionExpressionAccess().getMultiplicationExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getGroup_1()); }
	(rule__AdditionExpression__Group_1__0)*
	{ after(grammarAccess.getAdditionExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group_1__0__Impl
	rule__AdditionExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getBasicBinaryExpressionLhsOperandAction_1_0()); }
	()
	{ after(grammarAccess.getAdditionExpressionAccess().getBasicBinaryExpressionLhsOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group_1__1__Impl
	rule__AdditionExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__AdditionExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getAdditionExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditionExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionExpressionAccess().getRhsOperandAssignment_1_2()); }
	(rule__AdditionExpression__RhsOperandAssignment_1_2)
	{ after(grammarAccess.getAdditionExpressionAccess().getRhsOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpression__Group__0__Impl
	rule__MultiplicationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
	{ after(grammarAccess.getMultiplicationExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExpressionAccess().getGroup_1()); }
	(rule__MultiplicationExpression__Group_1__0)*
	{ after(grammarAccess.getMultiplicationExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpression__Group_1__0__Impl
	rule__MultiplicationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExpressionAccess().getBasicBinaryExpressionLhsOperandAction_1_0()); }
	()
	{ after(grammarAccess.getMultiplicationExpressionAccess().getBasicBinaryExpressionLhsOperandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpression__Group_1__1__Impl
	rule__MultiplicationExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__MultiplicationExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getMultiplicationExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationExpressionAccess().getRhsOperandAssignment_1_2()); }
	(rule__MultiplicationExpression__RhsOperandAssignment_1_2)
	{ after(grammarAccess.getMultiplicationExpressionAccess().getRhsOperandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionGroup__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionGroup__Group__0__Impl
	rule__DefinitionGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionGroup__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionGroupAccess().getDefinitionGroupAction_0()); }
	()
	{ after(grammarAccess.getDefinitionGroupAccess().getDefinitionGroupAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionGroup__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionGroup__Group__1__Impl
	rule__DefinitionGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionGroup__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionGroupAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDefinitionGroupAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionGroup__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionGroup__Group__2__Impl
	rule__DefinitionGroup__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionGroup__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionGroupAccess().getAlternatives_2()); }
	(rule__DefinitionGroup__Alternatives_2)*
	{ after(grammarAccess.getDefinitionGroupAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionGroup__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefinitionGroup__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionGroup__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionGroupAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getDefinitionGroupAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuestionGroup__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionGroup__Group__0__Impl
	rule__QuestionGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionGroup__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionGroupAccess().getQuestionGroupAction_0()); }
	()
	{ after(grammarAccess.getQuestionGroupAccess().getQuestionGroupAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionGroup__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionGroup__Group__1__Impl
	rule__QuestionGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionGroup__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionGroupAccess().getGroup_1()); }
	(rule__QuestionGroup__Group_1__0)?
	{ after(grammarAccess.getQuestionGroupAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionGroup__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionGroup__Group__2__Impl
	rule__QuestionGroup__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionGroup__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionGroupAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getQuestionGroupAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionGroup__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionGroup__Group__3__Impl
	rule__QuestionGroup__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionGroup__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionGroupAccess().getAlternatives_3()); }
	(rule__QuestionGroup__Alternatives_3)*
	{ after(grammarAccess.getQuestionGroupAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionGroup__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionGroup__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionGroup__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionGroupAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getQuestionGroupAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuestionGroup__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionGroup__Group_1__0__Impl
	rule__QuestionGroup__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionGroup__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionGroupAccess().getIfKeyword_1_0()); }
	'if'
	{ after(grammarAccess.getQuestionGroupAccess().getIfKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionGroup__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionGroup__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionGroup__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionGroupAccess().getGuardAssignment_1_1()); }
	(rule__QuestionGroup__GuardAssignment_1_1)
	{ after(grammarAccess.getQuestionGroupAccess().getGuardAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueType_Impl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueType_Impl__Group__0__Impl
	rule__ValueType_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType_Impl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueType_ImplAccess().getValueTypeAction_0()); }
	()
	{ after(grammarAccess.getValueType_ImplAccess().getValueTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType_Impl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueType_Impl__Group__1__Impl
	rule__ValueType_Impl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType_Impl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueType_ImplAccess().getValueTypeKeyword_1()); }
	'ValueType'
	{ after(grammarAccess.getValueType_ImplAccess().getValueTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType_Impl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueType_Impl__Group__2__Impl
	rule__ValueType_Impl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType_Impl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueType_ImplAccess().getNameAssignment_2()); }
	(rule__ValueType_Impl__NameAssignment_2)
	{ after(grammarAccess.getValueType_ImplAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType_Impl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueType_Impl__Group__3__Impl
	rule__ValueType_Impl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType_Impl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueType_ImplAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getValueType_ImplAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType_Impl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueType_Impl__Group__4__Impl
	rule__ValueType_Impl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType_Impl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueType_ImplAccess().getGroup_4()); }
	(rule__ValueType_Impl__Group_4__0)?
	{ after(grammarAccess.getValueType_ImplAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType_Impl__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueType_Impl__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType_Impl__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueType_ImplAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getValueType_ImplAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueType_Impl__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueType_Impl__Group_4__0__Impl
	rule__ValueType_Impl__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType_Impl__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueType_ImplAccess().getUnitKeyword_4_0()); }
	'unit'
	{ after(grammarAccess.getValueType_ImplAccess().getUnitKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType_Impl__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueType_Impl__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType_Impl__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueType_ImplAccess().getUnitAssignment_4_1()); }
	(rule__ValueType_Impl__UnitAssignment_4_1)
	{ after(grammarAccess.getValueType_ImplAccess().getUnitAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantCall__Group__0__Impl
	rule__ConstantCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantCallAccess().getConstantCallAction_0()); }
	()
	{ after(grammarAccess.getConstantCallAccess().getConstantCallAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantCallAccess().getValueAssignment_1()); }
	(rule__ConstantCall__ValueAssignment_1)
	{ after(grammarAccess.getConstantCallAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuestionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionCall__Group__0__Impl
	rule__QuestionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionCallAccess().getQuestionCallAction_0()); }
	()
	{ after(grammarAccess.getQuestionCallAccess().getQuestionCallAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionCall__Group__1__Impl
	rule__QuestionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionCallAccess().getQuestionAssignment_1()); }
	(rule__QuestionCall__QuestionAssignment_1)
	{ after(grammarAccess.getQuestionCallAccess().getQuestionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionCall__Group__2__Impl
	rule__QuestionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionCallAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getQuestionCallAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionCallAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getQuestionCallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanValueType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanValueType__Group__0__Impl
	rule__BooleanValueType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValueType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanValueTypeAccess().getBooleanValueTypeAction_0()); }
	()
	{ after(grammarAccess.getBooleanValueTypeAccess().getBooleanValueTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValueType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanValueType__Group__1__Impl
	rule__BooleanValueType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValueType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanValueTypeAccess().getBooleanTypeKeyword_1()); }
	'booleanType'
	{ after(grammarAccess.getBooleanValueTypeAccess().getBooleanTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValueType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanValueType__Group__2__Impl
	rule__BooleanValueType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValueType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanValueTypeAccess().getNameAssignment_2()); }
	(rule__BooleanValueType__NameAssignment_2)
	{ after(grammarAccess.getBooleanValueTypeAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValueType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanValueType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValueType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanValueTypeAccess().getGroup_3()); }
	(rule__BooleanValueType__Group_3__0)?
	{ after(grammarAccess.getBooleanValueTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanValueType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanValueType__Group_3__0__Impl
	rule__BooleanValueType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValueType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanValueTypeAccess().getLeftCurlyBracketKeyword_3_0()); }
	'{'
	{ after(grammarAccess.getBooleanValueTypeAccess().getLeftCurlyBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValueType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanValueType__Group_3__1__Impl
	rule__BooleanValueType__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValueType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanValueTypeAccess().getGroup_3_1()); }
	(rule__BooleanValueType__Group_3_1__0)?
	{ after(grammarAccess.getBooleanValueTypeAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValueType__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanValueType__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValueType__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanValueTypeAccess().getRightCurlyBracketKeyword_3_2()); }
	'}'
	{ after(grammarAccess.getBooleanValueTypeAccess().getRightCurlyBracketKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanValueType__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanValueType__Group_3_1__0__Impl
	rule__BooleanValueType__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValueType__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanValueTypeAccess().getUnitKeyword_3_1_0()); }
	'unit'
	{ after(grammarAccess.getBooleanValueTypeAccess().getUnitKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValueType__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanValueType__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValueType__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanValueTypeAccess().getUnitAssignment_3_1_1()); }
	(rule__BooleanValueType__UnitAssignment_3_1_1)
	{ after(grammarAccess.getBooleanValueTypeAccess().getUnitAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerValueType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerValueType__Group__0__Impl
	rule__IntegerValueType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerValueTypeAccess().getIntegerValueTypeAction_0()); }
	()
	{ after(grammarAccess.getIntegerValueTypeAccess().getIntegerValueTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerValueType__Group__1__Impl
	rule__IntegerValueType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerValueTypeAccess().getIntegerTypeKeyword_1()); }
	'integerType'
	{ after(grammarAccess.getIntegerValueTypeAccess().getIntegerTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerValueType__Group__2__Impl
	rule__IntegerValueType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerValueTypeAccess().getNameAssignment_2()); }
	(rule__IntegerValueType__NameAssignment_2)
	{ after(grammarAccess.getIntegerValueTypeAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerValueType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerValueTypeAccess().getGroup_3()); }
	(rule__IntegerValueType__Group_3__0)?
	{ after(grammarAccess.getIntegerValueTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerValueType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerValueType__Group_3__0__Impl
	rule__IntegerValueType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerValueTypeAccess().getLeftCurlyBracketKeyword_3_0()); }
	'{'
	{ after(grammarAccess.getIntegerValueTypeAccess().getLeftCurlyBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerValueType__Group_3__1__Impl
	rule__IntegerValueType__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerValueTypeAccess().getGroup_3_1()); }
	(rule__IntegerValueType__Group_3_1__0)?
	{ after(grammarAccess.getIntegerValueTypeAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerValueType__Group_3__2__Impl
	rule__IntegerValueType__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerValueTypeAccess().getGroup_3_2()); }
	(rule__IntegerValueType__Group_3_2__0)?
	{ after(grammarAccess.getIntegerValueTypeAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerValueType__Group_3__3__Impl
	rule__IntegerValueType__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerValueTypeAccess().getGroup_3_3()); }
	(rule__IntegerValueType__Group_3_3__0)?
	{ after(grammarAccess.getIntegerValueTypeAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerValueType__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerValueTypeAccess().getRightCurlyBracketKeyword_3_4()); }
	'}'
	{ after(grammarAccess.getIntegerValueTypeAccess().getRightCurlyBracketKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerValueType__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerValueType__Group_3_1__0__Impl
	rule__IntegerValueType__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerValueTypeAccess().getUnitKeyword_3_1_0()); }
	'unit'
	{ after(grammarAccess.getIntegerValueTypeAccess().getUnitKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerValueType__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerValueTypeAccess().getUnitAssignment_3_1_1()); }
	(rule__IntegerValueType__UnitAssignment_3_1_1)
	{ after(grammarAccess.getIntegerValueTypeAccess().getUnitAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerValueType__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerValueType__Group_3_2__0__Impl
	rule__IntegerValueType__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerValueTypeAccess().getMinKeyword_3_2_0()); }
	'min'
	{ after(grammarAccess.getIntegerValueTypeAccess().getMinKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerValueType__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerValueTypeAccess().getMinAssignment_3_2_1()); }
	(rule__IntegerValueType__MinAssignment_3_2_1)
	{ after(grammarAccess.getIntegerValueTypeAccess().getMinAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerValueType__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerValueType__Group_3_3__0__Impl
	rule__IntegerValueType__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerValueTypeAccess().getMaxKeyword_3_3_0()); }
	'max'
	{ after(grammarAccess.getIntegerValueTypeAccess().getMaxKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerValueType__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerValueTypeAccess().getMaxAssignment_3_3_1()); }
	(rule__IntegerValueType__MaxAssignment_3_3_1)
	{ after(grammarAccess.getIntegerValueTypeAccess().getMaxAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DecimalValueType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecimalValueType__Group__0__Impl
	rule__DecimalValueType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValueType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalValueTypeAccess().getDecimalValueTypeAction_0()); }
	()
	{ after(grammarAccess.getDecimalValueTypeAccess().getDecimalValueTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValueType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecimalValueType__Group__1__Impl
	rule__DecimalValueType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValueType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalValueTypeAccess().getDecimalTypeKeyword_1()); }
	'decimalType'
	{ after(grammarAccess.getDecimalValueTypeAccess().getDecimalTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValueType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecimalValueType__Group__2__Impl
	rule__DecimalValueType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValueType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalValueTypeAccess().getNameAssignment_2()); }
	(rule__DecimalValueType__NameAssignment_2)
	{ after(grammarAccess.getDecimalValueTypeAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValueType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecimalValueType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValueType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalValueTypeAccess().getGroup_3()); }
	(rule__DecimalValueType__Group_3__0)?
	{ after(grammarAccess.getDecimalValueTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DecimalValueType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecimalValueType__Group_3__0__Impl
	rule__DecimalValueType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValueType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalValueTypeAccess().getLeftCurlyBracketKeyword_3_0()); }
	'{'
	{ after(grammarAccess.getDecimalValueTypeAccess().getLeftCurlyBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValueType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecimalValueType__Group_3__1__Impl
	rule__DecimalValueType__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValueType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalValueTypeAccess().getGroup_3_1()); }
	(rule__DecimalValueType__Group_3_1__0)?
	{ after(grammarAccess.getDecimalValueTypeAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValueType__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecimalValueType__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValueType__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalValueTypeAccess().getRightCurlyBracketKeyword_3_2()); }
	'}'
	{ after(grammarAccess.getDecimalValueTypeAccess().getRightCurlyBracketKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DecimalValueType__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecimalValueType__Group_3_1__0__Impl
	rule__DecimalValueType__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValueType__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalValueTypeAccess().getUnitKeyword_3_1_0()); }
	'unit'
	{ after(grammarAccess.getDecimalValueTypeAccess().getUnitKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValueType__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecimalValueType__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValueType__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalValueTypeAccess().getUnitAssignment_3_1_1()); }
	(rule__DecimalValueType__UnitAssignment_3_1_1)
	{ after(grammarAccess.getDecimalValueTypeAccess().getUnitAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateValueType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateValueType__Group__0__Impl
	rule__DateValueType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValueType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateValueTypeAccess().getDateValueTypeAction_0()); }
	()
	{ after(grammarAccess.getDateValueTypeAccess().getDateValueTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValueType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateValueType__Group__1__Impl
	rule__DateValueType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValueType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateValueTypeAccess().getDateTypeKeyword_1()); }
	'dateType'
	{ after(grammarAccess.getDateValueTypeAccess().getDateTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValueType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateValueType__Group__2__Impl
	rule__DateValueType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValueType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateValueTypeAccess().getNameAssignment_2()); }
	(rule__DateValueType__NameAssignment_2)
	{ after(grammarAccess.getDateValueTypeAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValueType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateValueType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValueType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateValueTypeAccess().getGroup_3()); }
	(rule__DateValueType__Group_3__0)?
	{ after(grammarAccess.getDateValueTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateValueType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateValueType__Group_3__0__Impl
	rule__DateValueType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValueType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateValueTypeAccess().getLeftCurlyBracketKeyword_3_0()); }
	'{'
	{ after(grammarAccess.getDateValueTypeAccess().getLeftCurlyBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValueType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateValueType__Group_3__1__Impl
	rule__DateValueType__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValueType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateValueTypeAccess().getGroup_3_1()); }
	(rule__DateValueType__Group_3_1__0)?
	{ after(grammarAccess.getDateValueTypeAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValueType__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateValueType__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValueType__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateValueTypeAccess().getRightCurlyBracketKeyword_3_2()); }
	'}'
	{ after(grammarAccess.getDateValueTypeAccess().getRightCurlyBracketKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateValueType__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateValueType__Group_3_1__0__Impl
	rule__DateValueType__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValueType__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateValueTypeAccess().getUnitKeyword_3_1_0()); }
	'unit'
	{ after(grammarAccess.getDateValueTypeAccess().getUnitKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValueType__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateValueType__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValueType__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateValueTypeAccess().getUnitAssignment_3_1_1()); }
	(rule__DateValueType__UnitAssignment_3_1_1)
	{ after(grammarAccess.getDateValueTypeAccess().getUnitAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationValueType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValueType__Group__0__Impl
	rule__EnumerationValueType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueTypeAccess().getEnumerationValueTypeAction_0()); }
	()
	{ after(grammarAccess.getEnumerationValueTypeAccess().getEnumerationValueTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValueType__Group__1__Impl
	rule__EnumerationValueType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueTypeAccess().getEnumerationTypeKeyword_1()); }
	'enumerationType'
	{ after(grammarAccess.getEnumerationValueTypeAccess().getEnumerationTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValueType__Group__2__Impl
	rule__EnumerationValueType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueTypeAccess().getNameAssignment_2()); }
	(rule__EnumerationValueType__NameAssignment_2)
	{ after(grammarAccess.getEnumerationValueTypeAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValueType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueTypeAccess().getGroup_3()); }
	(rule__EnumerationValueType__Group_3__0)?
	{ after(grammarAccess.getEnumerationValueTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationValueType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValueType__Group_3__0__Impl
	rule__EnumerationValueType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueTypeAccess().getLeftCurlyBracketKeyword_3_0()); }
	'{'
	{ after(grammarAccess.getEnumerationValueTypeAccess().getLeftCurlyBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValueType__Group_3__1__Impl
	rule__EnumerationValueType__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueTypeAccess().getGroup_3_1()); }
	(rule__EnumerationValueType__Group_3_1__0)?
	{ after(grammarAccess.getEnumerationValueTypeAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValueType__Group_3__2__Impl
	rule__EnumerationValueType__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueTypeAccess().getGroup_3_2()); }
	(rule__EnumerationValueType__Group_3_2__0)?
	{ after(grammarAccess.getEnumerationValueTypeAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValueType__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueTypeAccess().getRightCurlyBracketKeyword_3_3()); }
	'}'
	{ after(grammarAccess.getEnumerationValueTypeAccess().getRightCurlyBracketKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationValueType__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValueType__Group_3_1__0__Impl
	rule__EnumerationValueType__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueTypeAccess().getUnitKeyword_3_1_0()); }
	'unit'
	{ after(grammarAccess.getEnumerationValueTypeAccess().getUnitKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValueType__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueTypeAccess().getUnitAssignment_3_1_1()); }
	(rule__EnumerationValueType__UnitAssignment_3_1_1)
	{ after(grammarAccess.getEnumerationValueTypeAccess().getUnitAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationValueType__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValueType__Group_3_2__0__Impl
	rule__EnumerationValueType__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueTypeAccess().getLiteralsKeyword_3_2_0()); }
	'literals'
	{ after(grammarAccess.getEnumerationValueTypeAccess().getLiteralsKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValueType__Group_3_2__1__Impl
	rule__EnumerationValueType__Group_3_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueTypeAccess().getLeftCurlyBracketKeyword_3_2_1()); }
	'{'
	{ after(grammarAccess.getEnumerationValueTypeAccess().getLeftCurlyBracketKeyword_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValueType__Group_3_2__2__Impl
	rule__EnumerationValueType__Group_3_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueTypeAccess().getEnumerationLiteralsAssignment_3_2_2()); }
	(rule__EnumerationValueType__EnumerationLiteralsAssignment_3_2_2)
	{ after(grammarAccess.getEnumerationValueTypeAccess().getEnumerationLiteralsAssignment_3_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValueType__Group_3_2__3__Impl
	rule__EnumerationValueType__Group_3_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueTypeAccess().getGroup_3_2_3()); }
	(rule__EnumerationValueType__Group_3_2_3__0)*
	{ after(grammarAccess.getEnumerationValueTypeAccess().getGroup_3_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValueType__Group_3_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueTypeAccess().getRightCurlyBracketKeyword_3_2_4()); }
	'}'
	{ after(grammarAccess.getEnumerationValueTypeAccess().getRightCurlyBracketKeyword_3_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationValueType__Group_3_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValueType__Group_3_2_3__0__Impl
	rule__EnumerationValueType__Group_3_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueTypeAccess().getCommaKeyword_3_2_3_0()); }
	','
	{ after(grammarAccess.getEnumerationValueTypeAccess().getCommaKeyword_3_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValueType__Group_3_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__Group_3_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueTypeAccess().getEnumerationLiteralsAssignment_3_2_3_1()); }
	(rule__EnumerationValueType__EnumerationLiteralsAssignment_3_2_3_1)
	{ after(grammarAccess.getEnumerationValueTypeAccess().getEnumerationLiteralsAssignment_3_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringValueType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringValueType__Group__0__Impl
	rule__StringValueType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValueType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringValueTypeAccess().getStringValueTypeAction_0()); }
	()
	{ after(grammarAccess.getStringValueTypeAccess().getStringValueTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValueType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringValueType__Group__1__Impl
	rule__StringValueType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValueType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringValueTypeAccess().getStringTypeKeyword_1()); }
	'StringType'
	{ after(grammarAccess.getStringValueTypeAccess().getStringTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValueType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringValueType__Group__2__Impl
	rule__StringValueType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValueType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringValueTypeAccess().getNameAssignment_2()); }
	(rule__StringValueType__NameAssignment_2)
	{ after(grammarAccess.getStringValueTypeAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValueType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringValueType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValueType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringValueTypeAccess().getGroup_3()); }
	(rule__StringValueType__Group_3__0)?
	{ after(grammarAccess.getStringValueTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringValueType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringValueType__Group_3__0__Impl
	rule__StringValueType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValueType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringValueTypeAccess().getLeftCurlyBracketKeyword_3_0()); }
	'{'
	{ after(grammarAccess.getStringValueTypeAccess().getLeftCurlyBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValueType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringValueType__Group_3__1__Impl
	rule__StringValueType__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValueType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringValueTypeAccess().getGroup_3_1()); }
	(rule__StringValueType__Group_3_1__0)?
	{ after(grammarAccess.getStringValueTypeAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValueType__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringValueType__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValueType__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringValueTypeAccess().getRightCurlyBracketKeyword_3_2()); }
	'}'
	{ after(grammarAccess.getStringValueTypeAccess().getRightCurlyBracketKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringValueType__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringValueType__Group_3_1__0__Impl
	rule__StringValueType__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValueType__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringValueTypeAccess().getUnitKeyword_3_1_0()); }
	'unit'
	{ after(grammarAccess.getStringValueTypeAccess().getUnitKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValueType__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringValueType__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValueType__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringValueTypeAccess().getUnitAssignment_3_1_1()); }
	(rule__StringValueType__UnitAssignment_3_1_1)
	{ after(grammarAccess.getStringValueTypeAccess().getUnitAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationLiteral__Group__0__Impl
	rule__EnumerationLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationLiteralAccess().getEnumerationLiteralAction_0()); }
	()
	{ after(grammarAccess.getEnumerationLiteralAccess().getEnumerationLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationLiteralAccess().getNameAssignment_1()); }
	(rule__EnumerationLiteral__NameAssignment_1)
	{ after(grammarAccess.getEnumerationLiteralAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerValue__Group__0__Impl
	rule__IntegerValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerValueAccess().getIntegerValueAction_0()); }
	()
	{ after(grammarAccess.getIntegerValueAccess().getIntegerValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerValueAccess().getIntValueAssignment_1()); }
	(rule__IntegerValue__IntValueAssignment_1)
	{ after(grammarAccess.getIntegerValueAccess().getIntValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringValue__Group__0__Impl
	rule__StringValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringValueAccess().getStringValueAction_0()); }
	()
	{ after(grammarAccess.getStringValueAccess().getStringValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringValueAccess().getStringValueAssignment_1()); }
	(rule__StringValue__StringValueAssignment_1)
	{ after(grammarAccess.getStringValueAccess().getStringValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanValue__Group__0__Impl
	rule__BooleanValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanValueAccess().getBooleanValueAction_0()); }
	()
	{ after(grammarAccess.getBooleanValueAccess().getBooleanValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanValueAccess().getBooleanValueAssignment_1()); }
	(rule__BooleanValue__BooleanValueAssignment_1)
	{ after(grammarAccess.getBooleanValueAccess().getBooleanValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationCall__Group__0__Impl
	rule__EnumerationCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationCallAccess().getEnumerationCallAction_0()); }
	()
	{ after(grammarAccess.getEnumerationCallAccess().getEnumerationCallAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationCallAccess().getEnumerationLiteralAssignment_1()); }
	(rule__EnumerationCall__EnumerationLiteralAssignment_1)
	{ after(grammarAccess.getEnumerationCallAccess().getEnumerationLiteralAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateValue__Group__0__Impl
	rule__DateValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateValueAccess().getDateValueAction_0()); }
	()
	{ after(grammarAccess.getDateValueAccess().getDateValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateValue__Group__1__Impl
	rule__DateValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateValueAccess().getDateValueKeyword_1()); }
	'DateValue'
	{ after(grammarAccess.getDateValueAccess().getDateValueKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateValue__Group__2__Impl
	rule__DateValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateValueAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getDateValueAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateValue__Group__3__Impl
	rule__DateValue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateValueAccess().getGroup_3()); }
	(rule__DateValue__Group_3__0)?
	{ after(grammarAccess.getDateValueAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValue__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateValue__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValue__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateValueAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getDateValueAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateValue__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateValue__Group_3__0__Impl
	rule__DateValue__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValue__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateValueAccess().getDateValueKeyword_3_0()); }
	'dateValue'
	{ after(grammarAccess.getDateValueAccess().getDateValueKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValue__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateValue__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValue__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateValueAccess().getDateValueAssignment_3_1()); }
	(rule__DateValue__DateValueAssignment_3_1)
	{ after(grammarAccess.getDateValueAccess().getDateValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DecimalValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecimalValue__Group__0__Impl
	rule__DecimalValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalValueAccess().getDecimalValueAction_0()); }
	()
	{ after(grammarAccess.getDecimalValueAccess().getDecimalValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecimalValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalValueAccess().getDecimalValueAssignment_1()); }
	(rule__DecimalValue__DecimalValueAssignment_1)
	{ after(grammarAccess.getDecimalValueAccess().getDecimalValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__0__Impl
	rule__EDouble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_0()); }
	(RULE_INT)?
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__1__Impl
	rule__EDouble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getEDoubleAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__2__Impl
	rule__EDouble__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getGroup_3()); }
	(rule__EDouble__Group_3__0)?
	{ after(grammarAccess.getEDoubleAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_3__0__Impl
	rule__EDouble__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getAlternatives_3_0()); }
	(rule__EDouble__Alternatives_3_0)
	{ after(grammarAccess.getEDoubleAccess().getAlternatives_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_3__1__Impl
	rule__EDouble__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_3_1()); }
	('-')?
	{ after(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3_2()); }
	RULE_INT
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuestionDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionDefinition__Group__0__Impl
	rule__QuestionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionDefinitionAccess().getIsMandatoryAssignment_0()); }
	(rule__QuestionDefinition__IsMandatoryAssignment_0)?
	{ after(grammarAccess.getQuestionDefinitionAccess().getIsMandatoryAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionDefinition__Group__1__Impl
	rule__QuestionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionDefinitionAccess().getQuestionKeyword_1()); }
	'question'
	{ after(grammarAccess.getQuestionDefinitionAccess().getQuestionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionDefinition__Group__2__Impl
	rule__QuestionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionDefinitionAccess().getNameAssignment_2()); }
	(rule__QuestionDefinition__NameAssignment_2)
	{ after(grammarAccess.getQuestionDefinitionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionDefinition__Group__3__Impl
	rule__QuestionDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionDefinitionAccess().getGroup_3()); }
	(rule__QuestionDefinition__Group_3__0)?
	{ after(grammarAccess.getQuestionDefinitionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionDefinition__Group__4__Impl
	rule__QuestionDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionDefinitionAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getQuestionDefinitionAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionDefinition__Group__5__Impl
	rule__QuestionDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionDefinitionAccess().getLabelAssignment_5()); }
	(rule__QuestionDefinition__LabelAssignment_5)
	{ after(grammarAccess.getQuestionDefinitionAccess().getLabelAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionDefinition__Group__6__Impl
	rule__QuestionDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionDefinitionAccess().getDataTypeAssignment_6()); }
	(rule__QuestionDefinition__DataTypeAssignment_6)
	{ after(grammarAccess.getQuestionDefinitionAccess().getDataTypeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionDefinition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionDefinitionAccess().getGroup_7()); }
	(rule__QuestionDefinition__Group_7__0)?
	{ after(grammarAccess.getQuestionDefinitionAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuestionDefinition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionDefinition__Group_3__0__Impl
	rule__QuestionDefinition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionDefinitionAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getQuestionDefinitionAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionDefinition__Group_3__1__Impl
	rule__QuestionDefinition__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionDefinitionAccess().getIsDisplayedAssignment_3_1()); }
	(rule__QuestionDefinition__IsDisplayedAssignment_3_1)?
	{ after(grammarAccess.getQuestionDefinitionAccess().getIsDisplayedAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionDefinition__Group_3__2__Impl
	rule__QuestionDefinition__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionDefinitionAccess().getGroup_3_2()); }
	(rule__QuestionDefinition__Group_3_2__0)?
	{ after(grammarAccess.getQuestionDefinitionAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionDefinition__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionDefinitionAccess().getRightParenthesisKeyword_3_3()); }
	')'
	{ after(grammarAccess.getQuestionDefinitionAccess().getRightParenthesisKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuestionDefinition__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionDefinition__Group_3_2__0__Impl
	rule__QuestionDefinition__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionDefinitionAccess().getCurrentValueKeyword_3_2_0()); }
	'currentValue'
	{ after(grammarAccess.getQuestionDefinitionAccess().getCurrentValueKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionDefinition__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionDefinitionAccess().getCurrentValueAssignment_3_2_1()); }
	(rule__QuestionDefinition__CurrentValueAssignment_3_2_1)
	{ after(grammarAccess.getQuestionDefinitionAccess().getCurrentValueAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuestionDefinition__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionDefinition__Group_7__0__Impl
	rule__QuestionDefinition__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionDefinitionAccess().getEqualsSignKeyword_7_0()); }
	'='
	{ after(grammarAccess.getQuestionDefinitionAccess().getEqualsSignKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionDefinition__Group_7__1__Impl
	rule__QuestionDefinition__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionDefinitionAccess().getComputedExpressionAssignment_7_1()); }
	(rule__QuestionDefinition__ComputedExpressionAssignment_7_1)
	{ after(grammarAccess.getQuestionDefinitionAccess().getComputedExpressionAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuestionDefinition__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionDefinitionAccess().getSemicolonKeyword_7_2()); }
	';'
	{ after(grammarAccess.getQuestionDefinitionAccess().getSemicolonKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QLSModel__ImportsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQLSModelAccess().getImportsImportParserRuleCall_1_0()); }
		ruleImport
		{ after(grammarAccess.getQLSModelAccess().getImportsImportParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__StyledQLModelAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQLSModelAccess().getStyledQLModelQLModelCrossReference_3_0()); }
		(
			{ before(grammarAccess.getQLSModelAccess().getStyledQLModelQLModelQualifiedNameParserRuleCall_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getQLSModelAccess().getStyledQLModelQLModelQualifiedNameParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getQLSModelAccess().getStyledQLModelQLModelCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QLSModel__QuestionStylesAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQLSModelAccess().getQuestionStylesQuestionStyleParserRuleCall_7_0()); }
		ruleQuestionStyle
		{ after(grammarAccess.getQLSModelAccess().getQuestionStylesQuestionStyleParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__StyledQuestionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionStyleAccess().getStyledQuestionQuestionDefinitionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getQuestionStyleAccess().getStyledQuestionQuestionDefinitionQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getQuestionStyleAccess().getStyledQuestionQuestionDefinitionQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getQuestionStyleAccess().getStyledQuestionQuestionDefinitionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__LabelStyleAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionStyleAccess().getLabelStyleLabelStyleParserRuleCall_3_1_0()); }
		ruleLabelStyle
		{ after(grammarAccess.getQuestionStyleAccess().getLabelStyleLabelStyleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionStyle__TypeStyleAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionStyleAccess().getTypeStyleTypeStyleParserRuleCall_4_1_0()); }
		ruleTypeStyle
		{ after(grammarAccess.getQuestionStyleAccess().getTypeStyleTypeStyleParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelStyle__ItalicAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelStyleAccess().getItalicItalicKeyword_2_0()); }
		(
			{ before(grammarAccess.getLabelStyleAccess().getItalicItalicKeyword_2_0()); }
			'italic'
			{ after(grammarAccess.getLabelStyleAccess().getItalicItalicKeyword_2_0()); }
		)
		{ after(grammarAccess.getLabelStyleAccess().getItalicItalicKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelStyle__BoldAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelStyleAccess().getBoldBoldKeyword_3_0()); }
		(
			{ before(grammarAccess.getLabelStyleAccess().getBoldBoldKeyword_3_0()); }
			'bold'
			{ after(grammarAccess.getLabelStyleAccess().getBoldBoldKeyword_3_0()); }
		)
		{ after(grammarAccess.getLabelStyleAccess().getBoldBoldKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeStyle__BooleanStyleKindAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanTypeStyleAccess().getBooleanStyleKindBooleanStyleKindEnumRuleCall_2_0()); }
		ruleBooleanStyleKind
		{ after(grammarAccess.getBooleanTypeStyleAccess().getBooleanStyleKindBooleanStyleKindEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeTextFieldStyle__StepAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericTypeTextFieldStyleAccess().getStepEDoubleParserRuleCall_4_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getNumericTypeTextFieldStyleAccess().getStepEDoubleParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextTypeStyle__MultilineAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextTypeStyleAccess().getMultilineMultilineKeyword_3_0()); }
		(
			{ before(grammarAccess.getTextTypeStyleAccess().getMultilineMultilineKeyword_3_0()); }
			'multiline'
			{ after(grammarAccess.getTextTypeStyleAccess().getMultilineMultilineKeyword_3_0()); }
		)
		{ after(grammarAccess.getTextTypeStyleAccess().getMultilineMultilineKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OperatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOperatorUnaryOperatorKindEnumRuleCall_1_0()); }
		ruleUnaryOperatorKind
		{ after(grammarAccess.getUnaryExpressionAccess().getOperatorUnaryOperatorKindEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OperandAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOperandUnaryOrPrimaryExpressionParserRuleCall_2_0()); }
		ruleUnaryOrPrimaryExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getOperandUnaryOrPrimaryExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getConditionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getIfExpressionAccess().getConditionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ThenExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getThenExpressionExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getIfExpressionAccess().getThenExpressionExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElseExpressionAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getElseExpressionExpressionParserRuleCall_5_1_0()); }
		ruleExpression
		{ after(grammarAccess.getIfExpressionAccess().getElseExpressionExpressionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getOperatorOrOperatorKindEnumRuleCall_1_1_0()); }
		ruleOrOperatorKind
		{ after(grammarAccess.getOrExpressionAccess().getOperatorOrOperatorKindEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RhsOperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getRhsOperandAndExpressionParserRuleCall_1_2_0()); }
		ruleAndExpression
		{ after(grammarAccess.getOrExpressionAccess().getRhsOperandAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getOperatorAndOperatorKindEnumRuleCall_1_1_0()); }
		ruleAndOperatorKind
		{ after(grammarAccess.getAndExpressionAccess().getOperatorAndOperatorKindEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RhsOperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getRhsOperandEqualExpressionParserRuleCall_1_2_0()); }
		ruleEqualExpression
		{ after(grammarAccess.getAndExpressionAccess().getRhsOperandEqualExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualExpressionAccess().getOperatorEqualOperatorKindEnumRuleCall_1_1_0()); }
		ruleEqualOperatorKind
		{ after(grammarAccess.getEqualExpressionAccess().getOperatorEqualOperatorKindEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__RhsOperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualExpressionAccess().getRhsOperandComparisionExpressionParserRuleCall_1_2_0()); }
		ruleComparisionExpression
		{ after(grammarAccess.getEqualExpressionAccess().getRhsOperandComparisionExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisionExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisionExpressionAccess().getOperatorComparisionOperatorKindEnumRuleCall_1_1_0()); }
		ruleComparisionOperatorKind
		{ after(grammarAccess.getComparisionExpressionAccess().getOperatorComparisionOperatorKindEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisionExpression__RhsOperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisionExpressionAccess().getRhsOperandAdditionExpressionParserRuleCall_1_2_0()); }
		ruleAdditionExpression
		{ after(grammarAccess.getComparisionExpressionAccess().getRhsOperandAdditionExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionExpressionAccess().getOperatorAdditionOperatorKindEnumRuleCall_1_1_0()); }
		ruleAdditionOperatorKind
		{ after(grammarAccess.getAdditionExpressionAccess().getOperatorAdditionOperatorKindEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__RhsOperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionExpressionAccess().getRhsOperandMultiplicationExpressionParserRuleCall_1_2_0()); }
		ruleMultiplicationExpression
		{ after(grammarAccess.getAdditionExpressionAccess().getRhsOperandMultiplicationExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationExpressionAccess().getOperatorMultiplicationOperatorKindEnumRuleCall_1_1_0()); }
		ruleMultiplicationOperatorKind
		{ after(grammarAccess.getMultiplicationExpressionAccess().getOperatorMultiplicationOperatorKindEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__RhsOperandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationExpressionAccess().getRhsOperandUnaryOrPrimaryExpressionParserRuleCall_1_2_0()); }
		ruleUnaryOrPrimaryExpression
		{ after(grammarAccess.getMultiplicationExpressionAccess().getRhsOperandUnaryOrPrimaryExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionGroup__QuestionDefinitionsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionGroupAccess().getQuestionDefinitionsQuestionDefinitionParserRuleCall_2_0_0()); }
		ruleQuestionDefinition
		{ after(grammarAccess.getDefinitionGroupAccess().getQuestionDefinitionsQuestionDefinitionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionGroup__DataTypesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionGroupAccess().getDataTypesValueTypeParserRuleCall_2_1_0()); }
		ruleValueType
		{ after(grammarAccess.getDefinitionGroupAccess().getDataTypesValueTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionGroup__GuardAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionGroupAccess().getGuardExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getQuestionGroupAccess().getGuardExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionGroup__QuestionGroupsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionGroupAccess().getQuestionGroupsQuestionGroupParserRuleCall_3_0_0()); }
		ruleQuestionGroup
		{ after(grammarAccess.getQuestionGroupAccess().getQuestionGroupsQuestionGroupParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionGroup__QuestionsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionGroupAccess().getQuestionsQuestionParserRuleCall_3_1_0()); }
		ruleQuestion
		{ after(grammarAccess.getQuestionGroupAccess().getQuestionsQuestionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__QuestionDefinitionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionAccess().getQuestionDefinitionQuestionDefinitionCrossReference_0()); }
		(
			{ before(grammarAccess.getQuestionAccess().getQuestionDefinitionQuestionDefinitionQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getQuestionAccess().getQuestionDefinitionQuestionDefinitionQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getQuestionAccess().getQuestionDefinitionQuestionDefinitionCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType_Impl__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueType_ImplAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getValueType_ImplAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType_Impl__UnitAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueType_ImplAccess().getUnitEStringParserRuleCall_4_1_0()); }
		ruleEString
		{ after(grammarAccess.getValueType_ImplAccess().getUnitEStringParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantCall__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantCallAccess().getValueAlternatives_1_0()); }
		(rule__ConstantCall__ValueAlternatives_1_0)
		{ after(grammarAccess.getConstantCallAccess().getValueAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionCall__QuestionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionCallAccess().getQuestionQuestionDefinitionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getQuestionCallAccess().getQuestionQuestionDefinitionQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getQuestionCallAccess().getQuestionQuestionDefinitionQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getQuestionCallAccess().getQuestionQuestionDefinitionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValueType__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanValueTypeAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getBooleanValueTypeAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValueType__UnitAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanValueTypeAccess().getUnitEStringParserRuleCall_3_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getBooleanValueTypeAccess().getUnitEStringParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerValueTypeAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getIntegerValueTypeAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__UnitAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerValueTypeAccess().getUnitEStringParserRuleCall_3_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getIntegerValueTypeAccess().getUnitEStringParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__MinAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerValueTypeAccess().getMinEIntParserRuleCall_3_2_1_0()); }
		ruleEInt
		{ after(grammarAccess.getIntegerValueTypeAccess().getMinEIntParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValueType__MaxAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerValueTypeAccess().getMaxEIntParserRuleCall_3_3_1_0()); }
		ruleEInt
		{ after(grammarAccess.getIntegerValueTypeAccess().getMaxEIntParserRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValueType__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecimalValueTypeAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getDecimalValueTypeAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValueType__UnitAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecimalValueTypeAccess().getUnitEStringParserRuleCall_3_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getDecimalValueTypeAccess().getUnitEStringParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValueType__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateValueTypeAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getDateValueTypeAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValueType__UnitAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateValueTypeAccess().getUnitEStringParserRuleCall_3_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getDateValueTypeAccess().getUnitEStringParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationValueTypeAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumerationValueTypeAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__UnitAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationValueTypeAccess().getUnitEStringParserRuleCall_3_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getEnumerationValueTypeAccess().getUnitEStringParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__EnumerationLiteralsAssignment_3_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationValueTypeAccess().getEnumerationLiteralsEnumerationLiteralParserRuleCall_3_2_2_0()); }
		ruleEnumerationLiteral
		{ after(grammarAccess.getEnumerationValueTypeAccess().getEnumerationLiteralsEnumerationLiteralParserRuleCall_3_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValueType__EnumerationLiteralsAssignment_3_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationValueTypeAccess().getEnumerationLiteralsEnumerationLiteralParserRuleCall_3_2_3_1_0()); }
		ruleEnumerationLiteral
		{ after(grammarAccess.getEnumerationValueTypeAccess().getEnumerationLiteralsEnumerationLiteralParserRuleCall_3_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValueType__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValueTypeAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getStringValueTypeAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValueType__UnitAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValueTypeAccess().getUnitEStringParserRuleCall_3_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getStringValueTypeAccess().getUnitEStringParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationLiteralAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumerationLiteralAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValue__IntValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerValueAccess().getIntValueEIntParserRuleCall_1_0()); }
		ruleEInt
		{ after(grammarAccess.getIntegerValueAccess().getIntValueEIntParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__StringValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValueAccess().getStringValueSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringValueAccess().getStringValueSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__BooleanValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanValueAccess().getBooleanValueEBooleanParserRuleCall_1_0()); }
		ruleEBoolean
		{ after(grammarAccess.getBooleanValueAccess().getBooleanValueEBooleanParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationCall__EnumerationLiteralAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationCallAccess().getEnumerationLiteralEnumerationLiteralCrossReference_1_0()); }
		(
			{ before(grammarAccess.getEnumerationCallAccess().getEnumerationLiteralEnumerationLiteralQualifiedNameParserRuleCall_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getEnumerationCallAccess().getEnumerationLiteralEnumerationLiteralQualifiedNameParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getEnumerationCallAccess().getEnumerationLiteralEnumerationLiteralCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateValue__DateValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateValueAccess().getDateValueEDateParserRuleCall_3_1_0()); }
		ruleEDate
		{ after(grammarAccess.getDateValueAccess().getDateValueEDateParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValue__DecimalValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecimalValueAccess().getDecimalValueEDoubleParserRuleCall_1_0()); }
		ruleEDouble
		{ after(grammarAccess.getDecimalValueAccess().getDecimalValueEDoubleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__IsMandatoryAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionDefinitionAccess().getIsMandatoryMandatoryKeyword_0_0()); }
		(
			{ before(grammarAccess.getQuestionDefinitionAccess().getIsMandatoryMandatoryKeyword_0_0()); }
			'mandatory'
			{ after(grammarAccess.getQuestionDefinitionAccess().getIsMandatoryMandatoryKeyword_0_0()); }
		)
		{ after(grammarAccess.getQuestionDefinitionAccess().getIsMandatoryMandatoryKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionDefinitionAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getQuestionDefinitionAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__IsDisplayedAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionDefinitionAccess().getIsDisplayedIsDisplayedKeyword_3_1_0()); }
		(
			{ before(grammarAccess.getQuestionDefinitionAccess().getIsDisplayedIsDisplayedKeyword_3_1_0()); }
			'isDisplayed'
			{ after(grammarAccess.getQuestionDefinitionAccess().getIsDisplayedIsDisplayedKeyword_3_1_0()); }
		)
		{ after(grammarAccess.getQuestionDefinitionAccess().getIsDisplayedIsDisplayedKeyword_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__CurrentValueAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionDefinitionAccess().getCurrentValueValueParserRuleCall_3_2_1_0()); }
		ruleValue
		{ after(grammarAccess.getQuestionDefinitionAccess().getCurrentValueValueParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__LabelAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionDefinitionAccess().getLabelEStringParserRuleCall_5_0()); }
		ruleEString
		{ after(grammarAccess.getQuestionDefinitionAccess().getLabelEStringParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__DataTypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionDefinitionAccess().getDataTypeValueTypeCrossReference_6_0()); }
		(
			{ before(grammarAccess.getQuestionDefinitionAccess().getDataTypeValueTypeEStringParserRuleCall_6_0_1()); }
			ruleEString
			{ after(grammarAccess.getQuestionDefinitionAccess().getDataTypeValueTypeEStringParserRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getQuestionDefinitionAccess().getDataTypeValueTypeCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuestionDefinition__ComputedExpressionAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionDefinitionAccess().getComputedExpressionExpressionParserRuleCall_7_1_0()); }
		ruleExpression
		{ after(grammarAccess.getQuestionDefinitionAccess().getComputedExpressionExpressionParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
