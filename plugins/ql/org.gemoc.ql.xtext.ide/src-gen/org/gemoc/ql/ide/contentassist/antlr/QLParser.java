/*
 * generated by Xtext 2.35.0
 */
package org.gemoc.ql.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.gemoc.ql.ide.contentassist.antlr.internal.InternalQLParser;
import org.gemoc.ql.services.QLGrammarAccess;

public class QLParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(QLGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, QLGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getValueTypeAccess().getAlternatives(), "rule__ValueType__Alternatives");
			builder.put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
			builder.put(grammarAccess.getValueAccess().getAlternatives(), "rule__Value__Alternatives");
			builder.put(grammarAccess.getDefinitionGroupAccess().getAlternatives_3(), "rule__DefinitionGroup__Alternatives_3");
			builder.put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEFloatAccess().getAlternatives_4_0(), "rule__EFloat__Alternatives_4_0");
			builder.put(grammarAccess.getBinaryOperatorKindAccess().getAlternatives(), "rule__BinaryOperatorKind__Alternatives");
			builder.put(grammarAccess.getUnaryOperatorKindAccess().getAlternatives(), "rule__UnaryOperatorKind__Alternatives");
			builder.put(grammarAccess.getQLModelAccess().getGroup(), "rule__QLModel__Group__0");
			builder.put(grammarAccess.getQLModelAccess().getGroup_4(), "rule__QLModel__Group_4__0");
			builder.put(grammarAccess.getQLModelAccess().getGroup_5(), "rule__QLModel__Group_5__0");
			builder.put(grammarAccess.getQLModelAccess().getGroup_5_3(), "rule__QLModel__Group_5_3__0");
			builder.put(grammarAccess.getQLModelAccess().getGroup_6(), "rule__QLModel__Group_6__0");
			builder.put(grammarAccess.getQLModelAccess().getGroup_6_3(), "rule__QLModel__Group_6_3__0");
			builder.put(grammarAccess.getFormAccess().getGroup(), "rule__Form__Group__0");
			builder.put(grammarAccess.getDefinitionGroupAccess().getGroup(), "rule__DefinitionGroup__Group__0");
			builder.put(grammarAccess.getQuestionGroupAccess().getGroup(), "rule__QuestionGroup__Group__0");
			builder.put(grammarAccess.getQuestionGroupAccess().getGroup_3(), "rule__QuestionGroup__Group_3__0");
			builder.put(grammarAccess.getQuestionGroupAccess().getGroup_4(), "rule__QuestionGroup__Group_4__0");
			builder.put(grammarAccess.getQuestionGroupAccess().getGroup_4_3(), "rule__QuestionGroup__Group_4_3__0");
			builder.put(grammarAccess.getQuestionGroupAccess().getGroup_5(), "rule__QuestionGroup__Group_5__0");
			builder.put(grammarAccess.getQuestionGroupAccess().getGroup_5_3(), "rule__QuestionGroup__Group_5_3__0");
			builder.put(grammarAccess.getQuestionAccess().getGroup(), "rule__Question__Group__0");
			builder.put(grammarAccess.getValueType_ImplAccess().getGroup(), "rule__ValueType_Impl__Group__0");
			builder.put(grammarAccess.getValueType_ImplAccess().getGroup_4(), "rule__ValueType_Impl__Group_4__0");
			builder.put(grammarAccess.getBasicBinaryExpressionAccess().getGroup(), "rule__BasicBinaryExpression__Group__0");
			builder.put(grammarAccess.getBasicBinaryExpressionAccess().getGroup_4(), "rule__BasicBinaryExpression__Group_4__0");
			builder.put(grammarAccess.getConstantCallAccess().getGroup(), "rule__ConstantCall__Group__0");
			builder.put(grammarAccess.getConstantCallAccess().getGroup_3(), "rule__ConstantCall__Group_3__0");
			builder.put(grammarAccess.getConstantCallAccess().getGroup_4(), "rule__ConstantCall__Group_4__0");
			builder.put(grammarAccess.getBasicUnaryExpressionAccess().getGroup(), "rule__BasicUnaryExpression__Group__0");
			builder.put(grammarAccess.getBasicUnaryExpressionAccess().getGroup_2(), "rule__BasicUnaryExpression__Group_2__0");
			builder.put(grammarAccess.getBasicUnaryExpressionAccess().getGroup_3(), "rule__BasicUnaryExpression__Group_3__0");
			builder.put(grammarAccess.getQuestionCallAccess().getGroup(), "rule__QuestionCall__Group__0");
			builder.put(grammarAccess.getQuestionCallAccess().getGroup_2(), "rule__QuestionCall__Group_2__0");
			builder.put(grammarAccess.getBooleanValueTypeAccess().getGroup(), "rule__BooleanValueType__Group__0");
			builder.put(grammarAccess.getBooleanValueTypeAccess().getGroup_4(), "rule__BooleanValueType__Group_4__0");
			builder.put(grammarAccess.getIntegerValueTypeAccess().getGroup(), "rule__IntegerValueType__Group__0");
			builder.put(grammarAccess.getIntegerValueTypeAccess().getGroup_4(), "rule__IntegerValueType__Group_4__0");
			builder.put(grammarAccess.getIntegerValueTypeAccess().getGroup_5(), "rule__IntegerValueType__Group_5__0");
			builder.put(grammarAccess.getIntegerValueTypeAccess().getGroup_6(), "rule__IntegerValueType__Group_6__0");
			builder.put(grammarAccess.getDecimalValueTypeAccess().getGroup(), "rule__DecimalValueType__Group__0");
			builder.put(grammarAccess.getDecimalValueTypeAccess().getGroup_4(), "rule__DecimalValueType__Group_4__0");
			builder.put(grammarAccess.getDateValueTypeAccess().getGroup(), "rule__DateValueType__Group__0");
			builder.put(grammarAccess.getDateValueTypeAccess().getGroup_4(), "rule__DateValueType__Group_4__0");
			builder.put(grammarAccess.getEnumerationValueTypeAccess().getGroup(), "rule__EnumerationValueType__Group__0");
			builder.put(grammarAccess.getEnumerationValueTypeAccess().getGroup_4(), "rule__EnumerationValueType__Group_4__0");
			builder.put(grammarAccess.getEnumerationValueTypeAccess().getGroup_5(), "rule__EnumerationValueType__Group_5__0");
			builder.put(grammarAccess.getEnumerationValueTypeAccess().getGroup_5_3(), "rule__EnumerationValueType__Group_5_3__0");
			builder.put(grammarAccess.getStringValueTypeAccess().getGroup(), "rule__StringValueType__Group__0");
			builder.put(grammarAccess.getStringValueTypeAccess().getGroup_4(), "rule__StringValueType__Group_4__0");
			builder.put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
			builder.put(grammarAccess.getEnumerationLiteralAccess().getGroup(), "rule__EnumerationLiteral__Group__0");
			builder.put(grammarAccess.getIntegerValueAccess().getGroup(), "rule__IntegerValue__Group__0");
			builder.put(grammarAccess.getIntegerValueAccess().getGroup_3(), "rule__IntegerValue__Group_3__0");
			builder.put(grammarAccess.getStringValueAccess().getGroup(), "rule__StringValue__Group__0");
			builder.put(grammarAccess.getStringValueAccess().getGroup_3(), "rule__StringValue__Group_3__0");
			builder.put(grammarAccess.getBooleanValueAccess().getGroup(), "rule__BooleanValue__Group__0");
			builder.put(grammarAccess.getDateValueAccess().getGroup(), "rule__DateValue__Group__0");
			builder.put(grammarAccess.getDateValueAccess().getGroup_3(), "rule__DateValue__Group_3__0");
			builder.put(grammarAccess.getDecimalValueAccess().getGroup(), "rule__DecimalValue__Group__0");
			builder.put(grammarAccess.getDecimalValueAccess().getGroup_3(), "rule__DecimalValue__Group_3__0");
			builder.put(grammarAccess.getEFloatAccess().getGroup(), "rule__EFloat__Group__0");
			builder.put(grammarAccess.getEFloatAccess().getGroup_4(), "rule__EFloat__Group_4__0");
			builder.put(grammarAccess.getQuestionDefinitionAccess().getGroup(), "rule__QuestionDefinition__Group__0");
			builder.put(grammarAccess.getQuestionDefinitionAccess().getGroup_5(), "rule__QuestionDefinition__Group_5__0");
			builder.put(grammarAccess.getQuestionDefinitionAccess().getGroup_8(), "rule__QuestionDefinition__Group_8__0");
			builder.put(grammarAccess.getQuestionDefinitionAccess().getGroup_9(), "rule__QuestionDefinition__Group_9__0");
			builder.put(grammarAccess.getQLModelAccess().getCanSubmitAssignment_1(), "rule__QLModel__CanSubmitAssignment_1");
			builder.put(grammarAccess.getQLModelAccess().getSubmitDateAssignment_4_1(), "rule__QLModel__SubmitDateAssignment_4_1");
			builder.put(grammarAccess.getQLModelAccess().getFormsAssignment_5_2(), "rule__QLModel__FormsAssignment_5_2");
			builder.put(grammarAccess.getQLModelAccess().getFormsAssignment_5_3_1(), "rule__QLModel__FormsAssignment_5_3_1");
			builder.put(grammarAccess.getQLModelAccess().getDefinitionGroupAssignment_6_2(), "rule__QLModel__DefinitionGroupAssignment_6_2");
			builder.put(grammarAccess.getQLModelAccess().getDefinitionGroupAssignment_6_3_1(), "rule__QLModel__DefinitionGroupAssignment_6_3_1");
			builder.put(grammarAccess.getFormAccess().getNameAssignment_1(), "rule__Form__NameAssignment_1");
			builder.put(grammarAccess.getFormAccess().getQuestionGroupAssignment_4(), "rule__Form__QuestionGroupAssignment_4");
			builder.put(grammarAccess.getDefinitionGroupAccess().getQuestionDefinitionsAssignment_3_0(), "rule__DefinitionGroup__QuestionDefinitionsAssignment_3_0");
			builder.put(grammarAccess.getDefinitionGroupAccess().getDataTypesAssignment_3_1(), "rule__DefinitionGroup__DataTypesAssignment_3_1");
			builder.put(grammarAccess.getQuestionGroupAccess().getGuardAssignment_3_1(), "rule__QuestionGroup__GuardAssignment_3_1");
			builder.put(grammarAccess.getQuestionGroupAccess().getQuestionGroupsAssignment_4_2(), "rule__QuestionGroup__QuestionGroupsAssignment_4_2");
			builder.put(grammarAccess.getQuestionGroupAccess().getQuestionGroupsAssignment_4_3_1(), "rule__QuestionGroup__QuestionGroupsAssignment_4_3_1");
			builder.put(grammarAccess.getQuestionGroupAccess().getQuestionsAssignment_5_2(), "rule__QuestionGroup__QuestionsAssignment_5_2");
			builder.put(grammarAccess.getQuestionGroupAccess().getQuestionsAssignment_5_3_1(), "rule__QuestionGroup__QuestionsAssignment_5_3_1");
			builder.put(grammarAccess.getQuestionAccess().getQuestionDefinitionAssignment_3(), "rule__Question__QuestionDefinitionAssignment_3");
			builder.put(grammarAccess.getValueType_ImplAccess().getNameAssignment_2(), "rule__ValueType_Impl__NameAssignment_2");
			builder.put(grammarAccess.getValueType_ImplAccess().getUnitAssignment_4_1(), "rule__ValueType_Impl__UnitAssignment_4_1");
			builder.put(grammarAccess.getBasicBinaryExpressionAccess().getOperatorAssignment_3(), "rule__BasicBinaryExpression__OperatorAssignment_3");
			builder.put(grammarAccess.getBasicBinaryExpressionAccess().getResultTypeAssignment_4_1(), "rule__BasicBinaryExpression__ResultTypeAssignment_4_1");
			builder.put(grammarAccess.getBasicBinaryExpressionAccess().getLhsOperandAssignment_6(), "rule__BasicBinaryExpression__LhsOperandAssignment_6");
			builder.put(grammarAccess.getBasicBinaryExpressionAccess().getRhsOperandAssignment_8(), "rule__BasicBinaryExpression__RhsOperandAssignment_8");
			builder.put(grammarAccess.getConstantCallAccess().getResultTypeAssignment_3_1(), "rule__ConstantCall__ResultTypeAssignment_3_1");
			builder.put(grammarAccess.getConstantCallAccess().getValueAssignment_4_1(), "rule__ConstantCall__ValueAssignment_4_1");
			builder.put(grammarAccess.getBasicUnaryExpressionAccess().getOperatorAssignment_2_1(), "rule__BasicUnaryExpression__OperatorAssignment_2_1");
			builder.put(grammarAccess.getBasicUnaryExpressionAccess().getResultTypeAssignment_3_1(), "rule__BasicUnaryExpression__ResultTypeAssignment_3_1");
			builder.put(grammarAccess.getBasicUnaryExpressionAccess().getOperandAssignment_5(), "rule__BasicUnaryExpression__OperandAssignment_5");
			builder.put(grammarAccess.getQuestionCallAccess().getResultTypeAssignment_2_1(), "rule__QuestionCall__ResultTypeAssignment_2_1");
			builder.put(grammarAccess.getQuestionCallAccess().getQuestionAssignment_4(), "rule__QuestionCall__QuestionAssignment_4");
			builder.put(grammarAccess.getBooleanValueTypeAccess().getNameAssignment_2(), "rule__BooleanValueType__NameAssignment_2");
			builder.put(grammarAccess.getBooleanValueTypeAccess().getUnitAssignment_4_1(), "rule__BooleanValueType__UnitAssignment_4_1");
			builder.put(grammarAccess.getIntegerValueTypeAccess().getNameAssignment_2(), "rule__IntegerValueType__NameAssignment_2");
			builder.put(grammarAccess.getIntegerValueTypeAccess().getUnitAssignment_4_1(), "rule__IntegerValueType__UnitAssignment_4_1");
			builder.put(grammarAccess.getIntegerValueTypeAccess().getMinAssignment_5_1(), "rule__IntegerValueType__MinAssignment_5_1");
			builder.put(grammarAccess.getIntegerValueTypeAccess().getMaxAssignment_6_1(), "rule__IntegerValueType__MaxAssignment_6_1");
			builder.put(grammarAccess.getDecimalValueTypeAccess().getNameAssignment_2(), "rule__DecimalValueType__NameAssignment_2");
			builder.put(grammarAccess.getDecimalValueTypeAccess().getUnitAssignment_4_1(), "rule__DecimalValueType__UnitAssignment_4_1");
			builder.put(grammarAccess.getDateValueTypeAccess().getNameAssignment_2(), "rule__DateValueType__NameAssignment_2");
			builder.put(grammarAccess.getDateValueTypeAccess().getUnitAssignment_4_1(), "rule__DateValueType__UnitAssignment_4_1");
			builder.put(grammarAccess.getEnumerationValueTypeAccess().getNameAssignment_2(), "rule__EnumerationValueType__NameAssignment_2");
			builder.put(grammarAccess.getEnumerationValueTypeAccess().getUnitAssignment_4_1(), "rule__EnumerationValueType__UnitAssignment_4_1");
			builder.put(grammarAccess.getEnumerationValueTypeAccess().getEnumerationLiteralsAssignment_5_2(), "rule__EnumerationValueType__EnumerationLiteralsAssignment_5_2");
			builder.put(grammarAccess.getEnumerationValueTypeAccess().getEnumerationLiteralsAssignment_5_3_1(), "rule__EnumerationValueType__EnumerationLiteralsAssignment_5_3_1");
			builder.put(grammarAccess.getStringValueTypeAccess().getNameAssignment_2(), "rule__StringValueType__NameAssignment_2");
			builder.put(grammarAccess.getStringValueTypeAccess().getUnitAssignment_4_1(), "rule__StringValueType__UnitAssignment_4_1");
			builder.put(grammarAccess.getEnumerationLiteralAccess().getNameAssignment_2(), "rule__EnumerationLiteral__NameAssignment_2");
			builder.put(grammarAccess.getIntegerValueAccess().getIntValueAssignment_3_1(), "rule__IntegerValue__IntValueAssignment_3_1");
			builder.put(grammarAccess.getStringValueAccess().getStringValueAssignment_3_1(), "rule__StringValue__StringValueAssignment_3_1");
			builder.put(grammarAccess.getBooleanValueAccess().getBooleanValueAssignment_1(), "rule__BooleanValue__BooleanValueAssignment_1");
			builder.put(grammarAccess.getDateValueAccess().getDateValueAssignment_3_1(), "rule__DateValue__DateValueAssignment_3_1");
			builder.put(grammarAccess.getDecimalValueAccess().getDecimalValueAssignment_3_1(), "rule__DecimalValue__DecimalValueAssignment_3_1");
			builder.put(grammarAccess.getQuestionDefinitionAccess().getIsDisplayedAssignment_0(), "rule__QuestionDefinition__IsDisplayedAssignment_0");
			builder.put(grammarAccess.getQuestionDefinitionAccess().getIsMandatoryAssignment_1(), "rule__QuestionDefinition__IsMandatoryAssignment_1");
			builder.put(grammarAccess.getQuestionDefinitionAccess().getNameAssignment_3(), "rule__QuestionDefinition__NameAssignment_3");
			builder.put(grammarAccess.getQuestionDefinitionAccess().getLabelAssignment_5_1(), "rule__QuestionDefinition__LabelAssignment_5_1");
			builder.put(grammarAccess.getQuestionDefinitionAccess().getDataTypeAssignment_7(), "rule__QuestionDefinition__DataTypeAssignment_7");
			builder.put(grammarAccess.getQuestionDefinitionAccess().getComputedExpressionAssignment_8_1(), "rule__QuestionDefinition__ComputedExpressionAssignment_8_1");
			builder.put(grammarAccess.getQuestionDefinitionAccess().getCurrentValueAssignment_9_1(), "rule__QuestionDefinition__CurrentValueAssignment_9_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private QLGrammarAccess grammarAccess;

	@Override
	protected InternalQLParser createParser() {
		InternalQLParser result = new InternalQLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public QLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(QLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
