/**
 * generated by Xtext 2.35.0
 */
package org.gemoc.ql.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.gemoc.ql.model.ql.DefinitionGroup;
import org.gemoc.ql.model.ql.Form;
import org.gemoc.ql.model.ql.QLModel;
import org.gemoc.ql.model.ql.QuestionGroup;
import org.gemoc.ql.services.QLGrammarAccess;

@SuppressWarnings("all")
public class QLFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private QLGrammarAccess _qLGrammarAccess;

  protected void _format(final QLModel qLModel, @Extension final IFormattableDocument document) {
    EList<Form> _forms = qLModel.getForms();
    for (final Form form : _forms) {
      document.<Form>format(form);
    }
    EList<DefinitionGroup> _definitionGroup = qLModel.getDefinitionGroup();
    for (final DefinitionGroup definitionGroup : _definitionGroup) {
      document.<DefinitionGroup>format(definitionGroup);
    }
  }

  protected void _format(final Form form, @Extension final IFormattableDocument document) {
    document.<QuestionGroup>format(form.getQuestionGroup());
  }

  public void format(final Object form, final IFormattableDocument document) {
    if (form instanceof XtextResource) {
      _format((XtextResource)form, document);
      return;
    } else if (form instanceof Form) {
      _format((Form)form, document);
      return;
    } else if (form instanceof QLModel) {
      _format((QLModel)form, document);
      return;
    } else if (form instanceof EObject) {
      _format((EObject)form, document);
      return;
    } else if (form == null) {
      _format((Void)null, document);
      return;
    } else if (form != null) {
      _format(form, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(form, document).toString());
    }
  }
}
