/*
 * generated by Xtext 2.35.0
 */
package org.gemoc.ql.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.gemoc.ql.model.ql.Form
import org.gemoc.ql.model.ql.QLModel
import org.gemoc.ql.services.QLGrammarAccess
import org.gemoc.ql.model.ql.DefinitionGroup
import org.gemoc.ql.model.ql.QuestionGroup

class QLFormatter extends AbstractFormatter2 {
	
	@Inject extension QLGrammarAccess

	def dispatch void format(QLModel qLModel, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (form : qLModel.forms) {
			form.surround[indent]
			form.format
			form.append[noSpace]
		}
		qLModel.forms.last.append[newLine]
		qLModel.append[setNewLines(1, 1, 2)]
		for (definitionGroup : qLModel.definitionGroup) {
			//definitionGroup.prepend[newLine]
			definitionGroup.surround[indent]
			definitionGroup.format
			definitionGroup.append[noSpace]
		}
		qLModel.definitionGroup.last.append[newLine]
		
	}

	def dispatch void format(Form form, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		form.regionFor.keyword("Form").prepend[newLine]
		form.questionGroup.format
	}
	
	def dispatch void format(QuestionGroup questionGroup, extension IFormattableDocument document) {
		for (subGroup : questionGroup.questionGroups) {
			subGroup.prepend[newLine]
			subGroup.surround[indent]
			subGroup.format
			subGroup.append[noSpace]
		}	
		
		questionGroup.questionGroups.last.append[newLine]
		for(question : questionGroup.questions) {
			question.prepend[newLine]
			question.surround[indent]
			question.format
			question.append[noSpace]
		}
		questionGroup.questions.last.append[newLine]
	}
	
	def dispatch void format(DefinitionGroup definitionGroup, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 

		for ( questionDefinition  : definitionGroup.questionDefinitions) {
			questionDefinition.prepend[newLine]
			questionDefinition.surround[indent]
			questionDefinition.format
			questionDefinition.append[noSpace]
		}
		definitionGroup.regionFor.keyword("definitions").prepend[setNewLines(1, 1, 2)]
		for ( dataType : definitionGroup.dataTypes) {
			dataType.prepend[newLine]
			dataType.surround[indent]
			dataType.format
			dataType.append[noSpace]
		}
		definitionGroup.dataTypes.last.append[newLine]
		
	}
	// TODO: implement for DefinitionGroup, QuestionGroup, BasicBinaryExpression, ConstantCall, BasicUnaryExpression, EnumerationValueType, QuestionDefinition
}
